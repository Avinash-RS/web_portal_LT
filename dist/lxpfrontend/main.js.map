{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/admin/services/admin-services.service.ts","webpack:///./src/app/admin/services/operations/admin_mutation.ts","webpack:///./src/app/admin/services/operations/admin_query.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/material.module.ts","webpack:///./src/app/core/services/_helpers/auth.guard.ts","webpack:///./src/app/core/services/_helpers/error.interceptor.ts","webpack:///./src/app/core/services/_helpers/index.ts","webpack:///./src/app/core/services/_helpers/jwt.interceptor.ts","webpack:///./src/app/core/services/_helpers/mock-services.ts","webpack:///./src/app/core/services/common-services.service.ts","webpack:///./src/app/core/services/configs-loader.service.ts","webpack:///./src/app/core/services/handlers/alert-service.service.ts","webpack:///./src/app/core/services/handlers/global-service.service.ts","webpack:///./src/app/core/services/operations/common_mutation.ts","webpack:///./src/app/core/services/operations/common_query.ts","webpack:///./src/app/core/shared/alert-component/alert-component.component.html","webpack:///./src/app/core/shared/alert-component/alert-component.component.scss","webpack:///./src/app/core/shared/alert-component/alert-component.component.ts","webpack:///./src/app/graphql/graphql.modules.ts","webpack:///./src/app/learner/services/learner-services.service.ts","webpack:///./src/app/learner/services/operations/learner_mutation.ts","webpack:///./src/app/learner/services/operations/learner_query.ts","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.scss","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/router.animation.ts","webpack:///./src/app/wca/services/operations/wca_query.ts","webpack:///./src/app/wca/services/wca.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./core/core.module\": [\n\t\t\"./src/app/core/core.module.ts\",\n\t\t\"default~core-core-module~learner-learner-module\"\n\t],\n\t\"./learner/learner.module\": [\n\t\t\"./src/app/learner/learner.module.ts\",\n\t\t\"default~core-core-module~learner-learner-module\",\n\t\t\"learner-learner-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { ConfigsLoaderService } from '@core/services/configs-loader.service';\nimport {\n  user_registration, createusergroup, update_notification, groupstatus, update_group,\n  create_catelogue, reassigncourse, update_catalogue, delete_catalogue, create_master_catalogue,\n  updatecatalogueinfo, unmapcoursesfromcatalogue, coursecataloguemapping, rejectenrollment, approveenrollment\n} from './operations/admin_mutation';\n\nimport {\n  get_user_group, search_user, searchUserFromGroup, deactivate_reactivate_user, get_all_user, block_user, get_all_learner_detail,\n  get_user_session_detail, get_course_createdby_admin, publishcourse, get_course_published, getgroup, get_user_group_hierarchy,\n  getnotificationreports, get_draft_course, getcategoryadmin, getallcatalogue, getallcatalogue_by_id, getcatalogue,\n  getenrolledcourses, get_all_enrolledcourses, getcoursesforcatalogue, getcoursesincatalogue, getAdminOverview,\n  getAdmindashboardCoursetab, getLeranertabCount, getActiveinactiveCount, getLoginsPerDay, getUsersInWeeks, getProfessionalStudent,\n  enrolledCourse, getgroupbyid, getTopfiveDashboardType, getadminexportauditlog, getCoursesChart\n} from './operations/admin_query';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminServicesService {\n  envWcaApi:any = environment.wcaapiurl;\n  envApi:any = environment.apiUrl;\n  envApiImg:any =environment.apiUrlImg;\n  envCourseApi:any =environment.createCourseApi\n  // tslint:disable-next-line:variable-name\n  _currentUser: any;\n\n  // tslint:disable-next-line:no-shadowed-variable\n  constructor(private Apollo: Apollo, private http: HttpClient, \n    private configs:ConfigsLoaderService) { }\n\n  // for add user - group dropdown\n  getUserGroup() {\n    return this.Apollo.query({\n      query: get_user_group,\n    });\n  }\n\n  // Add user flow\n  // tslint:disable-next-line:variable-name\n  user_registration(email: any, full_name: any, termsandconditions: boolean, group_id?: any, group_name?: any, admin?: any[]) {\n    return this.Apollo.query({\n      query: user_registration,\n      variables: {\n        full_name,\n        email,\n        term_condition: termsandconditions,\n        group_id,\n        group_name,\n        admin\n      }\n    });\n  }\n\n  bulkuserupload(fb) {\n    const httpOptions = {\n      headers: new HttpHeaders({ Authorization: 'Bearer 104150f8e66cae68b40203e1dbba7b4529231970' })\n    };\n    return this.http.post<any[]>(this.envApiImg + 'bulkuserupload', fb, httpOptions);\n  }\n  // end of Add user flow\n\n  // User Management\n  getAllUsers(pagenumber, sort, groupname?) {\n    return this.Apollo.query({\n      query: get_all_user,\n      variables: {\n        pagenumber,\n        sort,\n        group_name: groupname\n      }\n    });\n  }\n  // api current;y not used\n  // tslint:disable-next-line:variable-name\n  getLearnerDetail(user_id: any) {\n    return this.Apollo.query({\n      query: get_all_learner_detail,\n      variables: {\n        user_id,\n      }\n    });\n  }\n\n  // tslint:disable-next-line:variable-name\n  getUserSession(user_id) {\n    return this.Apollo.query({\n      query: get_user_session_detail,\n      variables: {\n        user_id,\n      }\n    });\n  }\n\n  // tslint:disable-next-line:variable-name\n  searchUser(search_string, pagination, sort) {\n    return this.Apollo.query({\n      query: search_user,\n      variables: {\n        search_string,\n        pagination,\n        sort,\n      }\n    });\n  }\n\n  // tslint:disable-next-line:variable-name\n  searchUserInGroup(search_string, group_id) {\n    return this.Apollo.query({\n      query: searchUserFromGroup,\n      variables: {\n        search_string,\n        group_id\n      }\n    });\n  }\n\n  // tslint:disable-next-line:variable-name\n  deActivate_And_reActivate_User(user_id, is_active) {\n    return this.Apollo.query({\n      query: deactivate_reactivate_user,\n      variables: {\n        user_id,\n        is_active,\n      }\n    });\n  }\n  // tslint:disable-next-line:variable-name\n  blockUser(user_id, is_blocked) {\n    return this.Apollo.query({\n      query: block_user,\n      variables: {\n        user_id,\n        is_blocked,\n      }\n    });\n  }\n  // end of User Management\n\n  // Group Management\n  // tslint:disable-next-line:variable-name\n  updateGroup(_id, group_name, group_id) {\n    return this.Apollo.query({\n      query: update_group,\n      variables: {\n        _id,\n        group_name,\n        group_id\n      }\n    });\n  }\n\n  gethierarchies() {\n    return this.Apollo.query({\n      query: get_user_group_hierarchy,\n    });\n  }\n\n  getgroup(data) {\n    return this.Apollo.query({\n      query: getgroup,\n      variables: {\n        input_id: data.input_id, type: data.type, pagenumber: data.pagenumber\n      }\n    });\n  }\n\n  creategroup(group) {\n    return this.Apollo.query({\n      query: createusergroup,\n      variables: {\n        group_name: group.group_name, group_type: group.group_type,\n        parent_group_id: group.parent_group_id, hierarchy_id: group.hierarchy_id,\n        admin_id: group.admin_id, catalogue_id: group.catalogue_id\n      }\n    });\n  }\n\n  updategroupdetails(data) {\n    return this.Apollo.query({\n      query: groupstatus,\n      variables: {\n        catalogue_id: data.catalogue_id,\n        catalogue_name: data.catalogue_name,\n        is_active: data.is_active,\n        group_id: data.group_id,\n        group_name: data.group_name,\n        group_type: data.group_type,\n        parent_group_id: data.parent_group_id,\n        hierarchy_id: data.hierarchy_id,\n        admin_id: data.admin_id,\n        created_by: data.created_by\n      }\n    });\n  }\n\n  getgroupbyid(groupid) {\n    return this.Apollo.query({\n      query: getgroupbyid,\n      variables: {\n        group_id: groupid\n      }\n    });\n  }\n\n  // end of Group Management\n\n  // Notifications\n  // tslint:disable-next-line:variable-name\n  getNotificationData(admin_id) {\n    return this.Apollo.query({\n      query: getnotificationreports,\n      variables: {\n        admin_id,\n      }\n    });\n  }\n  // tslint:disable-next-line:variable-name\n  removeNotificationData(report_id) {\n    return this.Apollo.query({\n      query: update_notification,\n      variables: {\n        report_id,\n      }\n    });\n  }\n  // end of Notifications\n\n  // Course Management\n  // tslint:disable-next-line:variable-name\n  getAllCourseCreated(user_id, pagenumber) {\n    return this.Apollo.query({\n      query: get_course_createdby_admin,\n      variables: {\n        admin_id: user_id,\n        pagenumber\n      }\n    });\n  }\n  // tslint:disable-next-line:variable-name\n  getAllCoursePublished(user_id, pagenumber) {\n    return this.Apollo.query({\n      query: get_course_published,\n      variables: {\n        admin_id: user_id,\n        pagenumber\n      }\n    });\n  }\n  // tslint:disable-next-line:variable-name\n  getAllDrafted(user_id, pagenumber) {\n    return this.Apollo.query({\n      query: get_draft_course,\n      variables: {\n        admin_id: user_id,\n        pagenumber\n      }\n    });\n  }\n  // tslint:disable-next-line:variable-name\n  publishCourse(course_id, is_published, level, category_id, sub_category_id, super_sub_category_id) {\n    return this.Apollo.query({\n      query: publishcourse,\n      variables: {\n        course_id,\n        is_published,\n        level,\n        category_id,\n        sub_category_id,\n        super_sub_category_id\n      }\n    });\n  }\n  // end of COurse Management\n\n  // Category Management\n  createCategory(category) {\n    return this.Apollo.query({\n      query: create_catelogue,\n      variables: {\n        input_name: category.input_name,\n        input_description: category.input_description,\n        input_image: category.input_image,\n        creator_id: category.creator_id,\n        level: category.level,\n        apply_all_courses: category.apply_all_courses,\n        course_id: category.course_id,\n        parent_category_id: category.parent_category_id,\n        parent_sub_category_id: category.parent_sub_category_id,\n      }\n    });\n  }\n\n  getcategories(pgnumber) {\n    return this.Apollo.query({\n      query: getcategoryadmin,\n      variables: {\n        pagenumber: pgnumber\n      }\n    });\n  }\n\n  reAssignCourses(course) {\n    return this.Apollo.query({\n      query: reassigncourse,\n      variables: {\n        old_level: course.old_level,\n        old_category_id: course.old_category_id,\n        old_sub_category_id: course.old_sub_category_id,\n        old_super_sub_category_id: course.old_super_sub_category_id,\n        level: course.level,\n        apply_all_courses: course.apply_all_courses,\n        course_id: course.course_id,\n        category_id: course.category_id,\n        sub_category_id: course.sub_category_id,\n        super_sub_category_id: course.super_sub_category_id\n      }\n    });\n  }\n\n  updateCatagory(category) {\n    return this.Apollo.query({\n      query: update_catalogue,\n      variables: {\n        input_id: category.input_id,\n        input_name: category.input_name,\n        input_description: category.input_description,\n        input_image: category.input_image,\n        level: category.level,\n      }\n    });\n  }\n\n  deleteCategory(inputid, Level) {\n    return this.Apollo.query({\n      query: delete_catalogue,\n      variables: {\n        input_id: inputid,\n        level: Level,\n      }\n    });\n  }\n\n  // End of Category Management\n\n  // catalogue Management\n  addNewCatalogue(name, description, id) {\n    return this.Apollo.query({\n      query: create_master_catalogue,\n      variables: {\n        catalogue_name: name,\n        catalogue_description: description,\n        creator_id: id,\n      }\n    });\n  }\n\n  updateCatalogDtl(name, description, id) {\n    return this.Apollo.query({\n      query: updatecatalogueinfo,\n      variables: {\n        catalogue_name: name,\n        catalogue_description: description,\n        catalogue_id: id,\n      }\n    });\n  }\n\n  getAllCatalogue(pg) {\n    return this.Apollo.query({\n      query: getallcatalogue,\n      variables: {\n        pagenumber: pg,\n      }\n    });\n  }\n  getcatalogues() {\n    return this.Apollo.query({\n      query: getcatalogue,\n    });\n  }\n\n  getallcatalogueById(id, pagenumber) {\n    return this.Apollo.query({\n      query: getallcatalogue_by_id,\n      variables: {\n        catalogue_id: id,\n        pagenumber\n      }\n    });\n  }\n  // tslint:disable-next-line:variable-name\n  getCourseForCatalogue(catalogue_id, pagenumber) {\n    return this.Apollo.query({\n      query: getcoursesforcatalogue,\n      variables: {\n        catalogue_id,\n        pagenumber\n      }\n    });\n  }\n  // tslint:disable-next-line:variable-name\n  getCourseInCatalogue(catalogue_id, pagenumber) {\n    return this.Apollo.query({\n      query: getcoursesincatalogue,\n      variables: {\n        catalogue_id,\n        pagenumber\n      }\n    });\n  }\n\n  addCourse(id, courseid, selectall) {\n    return this.Apollo.query({\n      query: coursecataloguemapping,\n      variables: {\n        catalogue_id: id,\n        course_id: courseid,\n        select_all: selectall\n      }\n    });\n  }\n\n  removeCourse(id, courseid, selectall) {\n    return this.Apollo.query({\n      query: unmapcoursesfromcatalogue,\n      variables: {\n        catalogue_id: id,\n        course_id: courseid,\n        select_all: selectall\n      }\n    });\n  }\n\n  // End of Catalogue Management\n\n  // Enrollment\n  getenrolledcourses(data) {\n    return this.Apollo.query({\n      query: getenrolledcourses,\n      variables: {\n        group_id: data.group_id,\n        pagenumber: data.pagenumber,\n        is_individual: data.is_individual,\n        course_id: data.course_id\n      }\n    });\n  }\n\n  getenrolledcoursesgroup(pgnumber) {\n    return this.Apollo.query({\n      query: get_all_enrolledcourses,\n      variables: {\n        pagenumber: pgnumber,\n      }\n    });\n  }\n\n  rejectenrollment(data) {\n    return this.Apollo.query({\n      query: rejectenrollment,\n      variables: {\n        update_type: data.update_type,\n        status_reason: data.status_reason,\n        enrollments: data.enrollments\n      }\n    });\n  }\n\n  approveenrollment(data) {\n    return this.Apollo.query({\n      query: approveenrollment,\n      variables: {\n        update_type: data.update_type,\n        status_reason: data.status_reason,\n        enrollments: data.enrollments\n      }\n    });\n  }\n\n  // End of enrollment\n  // Start Of Bulk Enrollment\n  bulkenrollment(fb) {\n    const httpOptions = {\n      headers: new HttpHeaders({ Authorization: 'Bearer 104150f8e66cae68b40203e1dbba7b4529231970' })\n    };\n    return this.http.post<any[]>(this.envApiImg + 'bulkenrollment', fb, httpOptions);\n  }\n\n  // End Of Bulk Enrollment\n\n  // Dashboard\n  // getting admin dashboard overview data\n  getAdminOverview(days, userid) {\n    return this.Apollo.query({\n      query: getAdminOverview,\n      variables: {\n        days,\n        user_id : userid\n      }\n    });\n  }\n  // getting admin dashboard data for course tab\n  getAdmindashboardCoursetab() {\n    return this.Apollo.query({\n      query: getAdmindashboardCoursetab,\n      variables: {}\n    });\n  }\n  getLeranertabCount() {\n    return this.Apollo.query({\n      query: getLeranertabCount,\n      variables: {}\n    });\n  }\n  // getting Active and in-active chart data\n  getActiveinactiveCount(days) {\n    return this.Apollo.query({\n      query: getActiveinactiveCount,\n      variables: {\n        days\n      }\n    });\n  }\n  // getting login per day chart data\n  getLoginsPerDay(days) {\n    return this.Apollo.query({\n      query: getLoginsPerDay,\n      variables: {\n        days,\n      }\n    });\n  }\n  // getting login per day data\n  getUsersIndays(days) {\n    return this.Apollo.query({\n      query: getUsersInWeeks,\n      variables: {\n        weeks: days,\n      }\n    });\n  }\n  // getting student and professional chart data\n  getProfessionalStudent(days) {\n    return this.Apollo.query({\n      query: getProfessionalStudent,\n      variables: {\n        days,\n      }\n    });\n  }\n  // getting enrolled and free course data for chart\n  enrolledCourse(days) {\n    return this.Apollo.query({\n      query: enrolledCourse,\n      variables: {\n        days,\n      }\n    });\n  }\n\n  // getting top 5 course\n  getTopfiveDashboardType(type) {\n    return this.Apollo.query({\n      query: getTopfiveDashboardType,\n      variables: {\n        type\n      }\n    });\n  }\n  // getting all 3 level category for admin dashboard chart\n  getCoursesChart() {\n    return this.Apollo.query({\n      query: getCoursesChart,\n      variables: {}\n    });\n  }\n\n\n  // End of dashboard\n\n  getadminexportauditlog(fromdate, todate) {\n    return this.Apollo.query({\n      query: getadminexportauditlog,\n      variables: {\n        from_date: fromdate,\n        to_date: todate\n      }\n    });\n  }\n\n  getfilteredauditlog(data) {\n    const httpOptions = {\n      headers: new HttpHeaders({ Authorization: localStorage.getItem('token') })\n    };\n    return this.http.post(this.envApi + 'get_audit_info', data, httpOptions);\n  }\n\n  getauditlogreports(pagenumber) {\n    const headers1 = new HttpHeaders().set('Authorization', localStorage.getItem('token'));\n    const params1 = new HttpParams().set('pagenumber', pagenumber);\n    const options = { params: params1, headers: headers1 };\n    return this.http.get<any[]>(this.envApi + 'getauditlog', options);\n  }\n}\n","import gql from 'graphql-tag';\n\n// tslint:disable-next-line:variable-name\nexport const user_registration = gql`\n  mutation user_registration($full_name: String!, $email: String!,$term_condition:Boolean,$group_id:String,\n    $group_name: String,$admin: [String]) {\n    user_registration(\n      full_name: $full_name\n      email: $email,\n      term_condition: $term_condition,\n      group_id: $group_id,\n      group_name: $group_name,\n      admin: $admin\n    ) {\n      message\n      success\n      data {\n      user_id\n      full_name\n      email\n      _id\n      }\n      _id\n      error\n    }\n  }`;\n\n// tslint:disable-next-line:variable-name\nexport const update_group = gql`\nmutation update_group($_id: String!, $group_name: String!, $group_id: String!){\n  update_group(_id: $_id,group_name: $group_name, group_id: $group_id) {\n    success\n    error_msg\n    message\n  }\n}`;\n\n// tslint:disable-next-line:variable-name\nexport const create_catelogue = gql`\nmutation create_catelogue(\n  $input_name: String!,\n  $input_description: String!,\n  $input_image: String!,\n  $creator_id: String!,\n  $level: Int!,\n  $apply_all_courses: Boolean!,\n  $course_id: [String]!,\n  $parent_category_id: String!,\n  $parent_sub_category_id: String!){\n  create_catelogue(input_name: $input_name,input_description: $input_description, input_image: $input_image,\n    creator_id : $creator_id,parent_sub_category_id: $parent_sub_category_id,level: $level, course_id: $course_id,\n    apply_all_courses : $apply_all_courses, parent_category_id: $parent_category_id) {\n    success\n    error_msg\n    message\n    details{\n      _id\n      level\n      category_id\n      category_name\n      category_image\n      category_description\n    }\n  }\n}`;\n\nexport const createusergroup = gql`\n  mutation createusergroup($group_name: String!, $group_type: String!, $parent_group_id: String!, $hierarchy_id: String!,\n     $admin_id: String!, $catalogue_id : String!) {\n  createusergroup(group_name: $group_name,group_type: $group_type,\n  parent_group_id: $parent_group_id,hierarchy_id: $hierarchy_id,admin_id: $admin_id,catalogue_id: $catalogue_id) {\n    success\n    error_msg\n    message{\n      _id\n      group_name\n      group_type\n      admin_id\n      created_on\n      updated_on\n      created_by\n      is_active\n      group_id\n      parent_id\n    }\n  }\n}`;\n\n// tslint:disable-next-line:variable-name\nexport const update_notification = gql`\nmutation update_notification($report_id: String!){\n  update_notification(report_id: $report_id) {\n    success\n    error_msg\n    message\n  }\n}`;\n\nexport const groupstatus = gql`\nmutation groupstatus($catalogue_id: String!,$catalogue_name: String!,$is_active: Boolean!,$group_id: String!,$group_name: String!,\n  $group_type: String!,$parent_group_id: String!,$hierarchy_id: String!,$admin_id: String!,$created_by: String!){\n  groupstatus(catalogue_id: $catalogue_id,catalogue_name: $catalogue_name,is_active: $is_active,group_id : $group_id,\n    group_name: $group_name,group_type: $group_type,\n    parent_group_id : $parent_group_id,hierarchy_id: $hierarchy_id,admin_id: $ admin_id,created_by: $created_by){\n      success\n      message\n      error_msg\n  }\n}`;\n\nexport const reassigncourse = gql`\n  mutation reassigncourse(\n    $old_level:  Int!,\n    $old_category_id: String!,\n    $old_sub_category_id: String!,\n    $old_super_sub_category_id: String!,\n    $level: Int!,\n    $apply_all_courses: Boolean!,\n    $course_id: [String]!,\n    $category_id: String!,\n    $sub_category_id: String!,\n    $super_sub_category_id: String!){\n      reassigncourse(old_level: $old_level,old_category_id: $old_category_id, old_sub_category_id: $old_sub_category_id,\n        old_super_sub_category_id : $old_super_sub_category_id,level: $level,apply_all_courses: $apply_all_courses, course_id: $course_id,\n        category_id : $category_id, sub_category_id: $sub_category_id, super_sub_category_id: $super_sub_category_id) {\n      success\n      error_msg\n      message\n    }\n  }`;\n\n// tslint:disable-next-line:variable-name\nexport const update_catalogue = gql`\n  mutation update_catalogue($input_id: String!, $input_name: String!,$input_description: String,\n     $input_image: String,$level: Int!){\n    update_catalogue(input_id : $input_id,input_name: $input_name,input_description: $input_description,\n      input_image: $input_image,level: $level){\n      success\n      message\n      error_msg\n    }\n  }`;\n\n// tslint:disable-next-line:variable-name\nexport const delete_catalogue = gql`\nmutation delete_catalogue($input_id: String! ,$level: Int!) {\n  delete_catalogue(input_id: $input_id,level: $level){\n    success\n    error_msg\n    message\n  }\n}`;\n\n// tslint:disable-next-line:variable-name\nexport const create_master_catalogue = gql`\nmutation  create_master_catalogue($catalogue_name: String! ,$catalogue_description : String!,$creator_id: String!) {\n  create_master_catalogue(catalogue_name: $catalogue_name,catalogue_description: $catalogue_description,creator_id:$creator_id ){\n    success\n    error_msg\n    message\n    details{\n      catalogue_id\n    }\n  }\n}`;\n\nexport const updatecatalogueinfo = gql`\nmutation  updatecatalogueinfo($catalogue_name: String! ,$catalogue_description : String!,$catalogue_id: String!) {\n  updatecatalogueinfo(catalogue_name: $catalogue_name,catalogue_description: $catalogue_description,catalogue_id:$catalogue_id ){\n    success\n    error_msg\n    message\n  }\n}`;\n\nexport const coursecataloguemapping = gql`\nmutation coursecataloguemapping($catalogue_id: String! ,$course_id: [String]! , $select_all: Boolean!) {\n  coursecataloguemapping(catalogue_id: $catalogue_id,course_id: $course_id, select_all: $select_all){\n    success\n    error_msg\n    message\n  }\n}`;\n\nexport const unmapcoursesfromcatalogue = gql`\nmutation unmapcoursesfromcatalogue($catalogue_id: String! ,$course_id: [String]! , $select_all: Boolean!) {\n  unmapcoursesfromcatalogue(catalogue_id: $catalogue_id,course_id: $course_id, select_all: $select_all ){\n    success\n    error_msg\n    message\n  }\n}`;\n// mutation{\n//   create_master_catalogue(\n//     catalogue_name: \"sample 1\",\n//     catalogue_description : \"sample catalogue number 1\",\n//     creator_id : \"5e69f4ad139c79bbf14adc8a\"\n//   ){\n//     success\n//     error_msg\n//     message\n//   }\n// }\n\nexport const rejectenrollment = gql`\nmutation reject_enrollment ($update_type: String!, $status_reason: String!,$enrollments: [enrollments_dtl]){\n  reject_enrollment(update_type: $update_type, status_reason: $status_reason, enrollments: $enrollments ){\n      success\n      error_msg\n      message\n  }\n}` ;\n\n\nexport const approveenrollment = gql`\nmutation approve_enrollment ($update_type: String!, $status_reason: String!,$enrollments: [enrollments_dtl]){\n  approve_enrollment(update_type: $update_type, status_reason: $status_reason, enrollments: $enrollments ){\n      success\n      error_msg\n      message\n  }\n}` ;\n","import gql from 'graphql-tag';\n\n// tslint:disable-next-line:variable-name\nexport const get_user_group = gql`\n  query get_user_group {\n    get_user_group {\n      success\n      message {\n        _id\n        group_name\n        group_type\n        is_active\n        group_id\n        parent_group_id\n        admin_id\n        hierarchy_id\n      }\n    }\n  }\n`;\n\n// tslint:disable-next-line:variable-name\nexport const search_user = gql`\n  query search_user($search_string: String!, $pagination: Int!, $sort: Int!) {\n    search_user(\n      search_string: $search_string\n      pagination: $pagination\n      sort: $sort\n    ) {\n      success\n      error_msg\n      message {\n        _id\n        is_admin\n        is_active\n        user_id\n        username\n        is_blocked\n        email\n        full_name\n        mobile_number\n        group_name\n        group_id\n      }\n    }\n  }\n`;\n\nexport const searchUserFromGroup = gql`\n  query search_user($search_string: String!, $group_id: String!) {\n    search_user(search_string: $search_string, group_id: $group_id) {\n      success\n      error_msg\n      message {\n        id\n        is_admin\n        is_active\n        user_id\n        username\n        is_blocked\n        email\n        full_name\n        mobile_number\n        group_name\n        group_id\n      }\n    }\n  }\n`;\n\n// tslint:disable-next-line:variable-name\nexport const deactivate_reactivate_user = gql`\n  query deactivate_reactivate_user($user_id: [String]!, $is_active: Boolean!) {\n    deactivate_reactivate_user(user_id: $user_id, is_active: $is_active) {\n      success\n      error_msg\n      message {\n        outdated_users\n        updated_users\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const block_user = gql`\n  query block_user($user_id: [String]!, $is_blocked: Boolean!) {\n    block_user(user_id: $user_id, is_blocked: $is_blocked) {\n      success\n      error_msg\n      message {\n        outdated_users\n        updated_users\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const get_all_user = gql`\n  query get_all_user($pagenumber: Int!, $sort: Int!, $group_name: String!) {\n    get_all_user(\n      pagenumber: $pagenumber\n      sort: $sort\n      group_name: $group_name\n    ) {\n      success\n      error_msg\n      learner_count\n      message {\n        _id\n        is_admin\n        is_active\n        user_id\n        username\n        is_blocked\n        full_name\n        email\n        mobile_number\n        group_name\n        group_id\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const get_user_session_detail = gql`\n  query get_user_session_detail($user_id: String!) {\n    get_user_session_detail(user_id: $user_id) {\n      success\n      message {\n        _id\n        wishlist_count\n        enrolled_course_count\n        course_detail {\n          course_id\n          course_description\n          course_name\n          course_start_datetime\n          course_end_datetime\n          enrollment_start\n          enrollment_end\n          author_details\n        }\n        wishlist_added {\n          course_id\n          created_on\n        }\n        userObjects {\n          _id\n          is_admin\n          is_active\n          user_id\n          username\n          is_blocked\n          is_profile_updated\n          registered_date\n          mobile_number\n          email\n          full_name\n          profile_img\n          year_of_birth\n          progress\n          gender\n          about_you\n          is_student_or_professional\n          country_name\n          state_name\n          professional {\n            total_experience\n            organization\n            job_role\n          }\n          social_media {\n            _id\n            link\n            img\n          }\n          user_profile\n        }\n        player_detail {\n          _id\n          status\n          location\n          course_id\n        }\n        last_login\n        language\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const get_all_learner_detail = gql`\n  query get_all_learner_detail($user_id: String!) {\n    get_all_learner_detail(user_id: $user_id) {\n      success\n      message {\n        _id\n        language\n        qualification {\n          Board_Name\n          Board_Id\n          institute_id\n          institute_name\n          institute_code\n          discipline_id\n          discipline_name\n          discipline_code\n          year_of_passing\n          percentage\n          specification_id\n          specification_name\n          specification_code\n          level_id\n          level_name\n          level_code\n        }\n        userObjects {\n          _id\n          is_admin\n          is_active\n          email\n          full_name\n          user_id\n          username\n          is_blocked\n          is_profile_updated\n          registered_date\n          mobile_number\n          profile_img\n          year_of_birth\n          progress\n          gender\n          about_you\n          is_student_or_professional\n          country_name\n          state_name\n          professional {\n            total_experience\n            organization\n            job_role\n          }\n          social_media {\n            _id\n            link\n            img\n          }\n          user_profile\n        }\n      }\n      error_msg\n    }\n  }\n`;\n\nexport const getnotificationreports = gql`\n  query getnotificationreports($admin_id: String!) {\n    getnotificationreports(admin_id: $admin_id) {\n      success\n      error_msg\n      message {\n        _id\n        upload_url\n        report_url\n        is_active\n        report_id\n        admin_id\n        time_ago\n        success_count\n        failure_count\n        updated_count\n        request_type\n        duplicate_count\n        existing_count\n        total_count\n        notification_msg\n        report_info {\n          created_on\n          updated_on\n          created_by\n        }\n      }\n    }\n  }\n`;\n\nexport const getgroup = gql`\n  query getgroup($input_id: String!, $type: String!, $pagenumber: Int!) {\n    getgroup(input_id: $input_id, type: $type, pagenumber: $pagenumber) {\n      success\n      error_msg\n      message {\n        _id\n        group_name\n        group_type\n        admin_id\n        created_on\n        updated_on\n        created_by\n        is_active\n        group_id\n        hierarchy_id\n        parent_group_id\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const get_user_group_hierarchy = gql`\n  query get_user_group_hierarchy {\n    get_user_group_hierarchy {\n      success\n      error_msg\n      message {\n        _id\n        hierarchy_id\n        hierarchy_name\n        hierarchy_level\n        created_on\n        updated_on\n        created_by\n        admin_id\n        is_active\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const get_course_createdby_admin = gql`\n  query get_course_createdby_admin($admin_id: String!, $pagenumber: Int!) {\n    get_course_createdby_admin(admin_id: $admin_id, pagenumber: $pagenumber) {\n      success\n      error_msg\n      course_count\n      message {\n        course_id\n        course_description\n        course_name\n        created_at\n        updated_at\n        version\n        location\n        course_start_datetime\n        course_end_datetime\n        advertised_start\n        course_img_url\n        social_sharing_url\n        certificate_display_behaviour\n        certificates_show_before_end\n        certificate_html_view_enabled\n        has_any_active_web_certificate\n        certificate_name\n        lowest_passing_grade\n        mobile_available\n        visible_to_staff_only\n        pre_requisite {\n          name\n          image\n        }\n        enrollment_start\n        enrollment_end\n        invitation_only\n        max_student_enrollments_allowed\n        announcement\n        catalog_visibility\n        course_video_url\n        short_description\n        self_paced\n        marketing_url\n        course_language\n        certificate_available_date\n        article_count\n        downloadable_resource_count\n        course_level\n        step_towards\n        rating\n        price\n        what_will_you_learn\n        course_category\n        course_type\n        parent_sub_category_id\n        category_id\n        groupid\n        created_by\n        updated_by\n        admin_id\n        is_published\n        course_mode\n        preview_video\n        learner_count\n        is_active\n        published_by\n        publisher_id\n        updated_by_id\n        published_on\n        takeway_details {\n          text\n          description\n          what_will_you_learn\n          media\n        }\n        coursepartner_details {\n          name\n          image\n        }\n        course_content_details {\n          name\n          type\n          is_active\n          parent_id\n          description\n          sub_section_id\n          file_content {\n            video_url\n            image_url\n            audio_url\n            file_url\n          }\n          unit {\n            name\n            type\n            is_active\n            parent_id\n            description\n            sub_section_id\n            file_content {\n              video_url\n              image_url\n              audio_url\n              file_url\n            }\n          }\n        }\n        author_details {\n          author_name\n          description\n          image\n        }\n      }\n    }\n  }\n`;\n\n// tslint:disable-next-line:variable-name\nexport const get_course_published = gql`\n  query get_course_published($admin_id: String!, $pagenumber: Int!) {\n    get_course_published(admin_id: $admin_id, pagenumber: $pagenumber) {\n      success\n      course_count\n      message {\n        course_id\n        course_description\n        course_name\n        created_at\n        updated_at\n        version\n        location\n        course_start_datetime\n        course_end_datetime\n        advertised_start\n        course_img_url\n        social_sharing_url\n        certificate_display_behaviour\n        certificates_show_before_end\n        certificate_html_view_enabled\n        has_any_active_web_certificate\n        certificate_name\n        lowest_passing_grade\n        mobile_available\n        visible_to_staff_only\n        pre_requisite {\n          name\n          image\n        }\n        enrollment_start\n        enrollment_end\n        invitation_only\n        max_student_enrollments_allowed\n        announcement\n        catalog_visibility\n        course_video_url\n        short_description\n        self_paced\n        marketing_url\n        course_language\n        certificate_available_date\n        article_count\n        downloadable_resource_count\n        course_level\n        step_towards\n        rating\n        price\n        what_will_you_learn\n        course_category\n        course_type\n        parent_sub_category_id\n        category_id\n        groupid\n        created_by\n        updated_by\n        admin_id\n        is_published\n        course_mode\n        preview_video\n        learner_count\n        is_active\n        published_by\n        publisher_id\n        updated_by_id\n        published_on\n        takeway_details {\n          text\n          description\n          what_will_you_learn\n          media\n        }\n        coursepartner_details {\n          name\n          image\n        }\n        course_content_details {\n          name\n          type\n          is_active\n          parent_id\n          description\n          sub_section_id\n          file_content {\n            video_url\n            image_url\n            audio_url\n            file_url\n          }\n          unit {\n            name\n            type\n            is_active\n            parent_id\n            description\n            sub_section_id\n            file_content {\n              video_url\n              image_url\n              audio_url\n              file_url\n            }\n          }\n        }\n        author_details {\n          author_name\n          description\n          image\n        }\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const get_draft_course = gql`\n  query get_draft_course($admin_id: String!, $pagenumber: Int!) {\n    get_draft_course(admin_id: $admin_id, pagenumber: $pagenumber) {\n      success\n      course_count\n      message {\n        course_id\n        course_description\n        course_name\n        created_at\n        updated_at\n        version\n        location\n        course_start_datetime\n        course_end_datetime\n        advertised_start\n        course_img_url\n        social_sharing_url\n        certificate_display_behaviour\n        certificates_show_before_end\n        certificate_html_view_enabled\n        has_any_active_web_certificate\n        certificate_name\n        lowest_passing_grade\n        mobile_available\n        visible_to_staff_only\n        pre_requisite {\n          name\n          image\n        }\n        enrollment_start\n        enrollment_end\n        invitation_only\n        max_student_enrollments_allowed\n        announcement\n        catalog_visibility\n        course_video_url\n        short_description\n        self_paced\n        marketing_url\n        course_language\n        certificate_available_date\n        article_count\n        downloadable_resource_count\n        course_level\n        step_towards\n        rating\n        price\n        what_will_you_learn\n        course_category\n        course_type\n        parent_sub_category_id\n        category_id\n        groupid\n        created_by\n        updated_by\n        admin_id\n        is_published\n        course_mode\n        preview_video\n        learner_count\n        is_active\n        published_by\n        publisher_id\n        updated_by_id\n        published_on\n        takeway_details {\n          text\n          description\n          what_will_you_learn\n          media\n        }\n        coursepartner_details {\n          name\n          image\n        }\n        course_content_details {\n          name\n          type\n          is_active\n          parent_id\n          description\n          sub_section_id\n          file_content {\n            video_url\n            image_url\n            audio_url\n            file_url\n          }\n          unit {\n            name\n            type\n            is_active\n            parent_id\n            description\n            sub_section_id\n            file_content {\n              video_url\n              image_url\n              audio_url\n              file_url\n            }\n          }\n        }\n        author_details {\n          author_name\n          description\n          image\n        }\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const publishcourse = gql`\n  query publishcourse(\n    $course_id: String!\n    $is_published: Boolean!\n    $level: String!\n    $category_id: String\n    $sub_category_id: String\n    $super_sub_category_id: String\n  ) {\n    publishcourse(\n      course_id: $course_id\n      is_published: $is_published\n      category_id: $category_id\n      sub_category_id: $sub_category_id\n      level: $level\n      super_sub_category_id: $super_sub_category_id\n    ) {\n      success\n      message\n      error_msg\n    }\n  }\n`;\n\nexport const getcategoryadmin = gql`\n  query getcategoryadmin($pagenumber: Int!) {\n    getcategoryadmin(pagenumber: $pagenumber) {\n      success\n      error_msg\n      message {\n        _id\n        creator_id\n        level\n        created_on\n        updated_on\n        created_by\n        language_code\n        is_active\n        category_id\n        category_name\n        category_image\n        category_description\n        is_child\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const getallcatalogue_by_id = gql`\n  query getallcatalogue_by_id($catalogue_id: String!, $pagenumber: Int!) {\n    getallcatalogue_by_id(\n      catalogue_id: $catalogue_id\n      pagenumber: $pagenumber\n    ) {\n      success\n      error_msg\n      message {\n        _id\n        catalogue_name\n        catalogue_description\n        creator_id\n        catalogue_id\n        created_on\n        updated_on\n        created_by\n        is_active\n        group_details {\n          _id\n          admin_id\n          catalogue_id\n          created_on\n          updated_on\n          created_by\n          is_active\n          group_id\n          group_name\n          category_id\n        }\n        course_details {\n          course_id\n          course_description\n          course_name\n          course_category\n          course_type\n          course_language\n          super_sub_category_details {\n            _id\n            creator_id\n            level\n            created_on\n            updated_on\n            created_by\n            language_code\n            is_active\n            super_sub_category_id\n            super_sub_category_name\n            super_sub_category_image\n            super_sub_category_description\n            parent_sub_category_id\n            parent_category_id\n          }\n          sub_category_details {\n            _id\n            creator_id\n            level\n            created_on\n            updated_on\n            created_by\n            language_code\n            is_active\n            sub_category_id\n            sub_category_name\n            sub_category_image\n            sub_category_description\n            parent_category_id\n          }\n          category_details {\n            _id\n            creator_id\n            level\n            created_on\n            updated_on\n            created_by\n            language_code\n            is_active\n            category_id\n            category_name\n            category_image\n            category_description\n          }\n        }\n      }\n    }\n  }\n`;\n// tslint:disable-next-line:variable-name\nexport const getallcatalogue = gql`\n  query getallcatalogue($pagenumber: Int!) {\n    getallcatalogue(pagenumber: $pagenumber) {\n      success\n      error_msg\n      total_count\n      message {\n        _id\n        catalogue_name\n        catalogue_description\n        creator_id\n        catalogue_id\n        created_on\n        updated_on\n        created_by\n        is_active\n        course_count\n      }\n    }\n  }\n`;\n\nexport const getcoursesincatalogue = gql`\n  query getcoursesincatalogue($catalogue_id: String!, $pagenumber: Int!) {\n    getcoursesincatalogue(\n      catalogue_id: $catalogue_id\n      pagenumber: $pagenumber\n    ) {\n      success\n      total_count\n      error_msg\n      message {\n        course_id\n        course_name\n        course_description\n        short_description\n        course_img_url\n      }\n    }\n  }\n`;\n\nexport const getcatalogue = gql`\n  query getallcatalogue {\n    getallcatalogue {\n      success\n      error_msg\n      total_count\n      message {\n        _id\n        catalogue_name\n        catalogue_description\n        creator_id\n        catalogue_id\n        created_on\n        updated_on\n        created_by\n        is_active\n      }\n    }\n  }\n`;\n\nexport const getenrolledcourses = gql`\n  query getenrolledcourses(\n    $group_id: String!\n    $pagenumber: Int!\n    $is_individual: Boolean!\n    $course_id: String!\n  ) {\n    getenrolledcourses(\n      group_id: $group_id\n      pagenumber: $pagenumber\n      is_individual: $is_individual\n      course_id: $course_id\n    ) {\n      success\n      error_msg\n      enroll_count\n      message {\n        _id\n        user_id\n        user_obj_id\n        course_id\n        enroll_date\n        lxp_joined_date\n        username\n        full_name\n        group_name\n        course_name\n        group_id\n        wish_list {\n          wish_list_id\n          created_on\n          user_id\n        }\n      }\n    }\n  }\n`;\n\n// tslint:disable-next-line:variable-name\nexport const get_all_enrolledcourses = gql`\n  query get_all_enrolledcourses($pagenumber: Int!) {\n    get_all_enrolledcourses(pagenumber: $pagenumber) {\n      enroll_count\n      success\n      error_msg\n      message {\n        totalCount\n        request_date\n        group_detail {\n          group_name\n          group_id\n          course_id\n          course_name\n        }\n      }\n    }\n  }\n`;\nexport const getcoursesforcatalogue = gql`\n  query getcoursesforcatalogue($catalogue_id: String!, $pagenumber: Int!) {\n    getcoursesforcatalogue(\n      catalogue_id: $catalogue_id\n      pagenumber: $pagenumber\n    ) {\n      success\n      total_count\n      error_msg\n      message {\n        course_id\n        course_name\n        course_description\n        short_description\n        course_img_url\n      }\n    }\n  }\n`;\n\nexport const getAdminOverview = gql`\n  query getAdminOverview($days: Int, $user_id: String) {\n    getAdminOverview(days: $days, user_id: $user_id) {\n      success\n      error_msg\n      message {\n        totalLearnerPecTill {\n          IncDecPec\n          valueIncDecPec\n        }\n        PublishCourse\n        DraftCourse\n        TotalCourse\n        newReg\n        allEnrollement\n        enrollPending\n        enrollRejected\n        enrollmentApprove\n        perDays {\n          _id\n          count\n        }\n        TotalActiveInActiveLearner {\n          Active\n          InActive\n        }\n        totalLearTillCurrent\n        availableCoursePec {\n          IncDecPec\n          valueIncDecPec\n        }\n        totalEnrollPec {\n          IncDecPec\n          valueIncDecPec\n        }\n        totalLearnerPec {\n          IncDecPec\n          valueIncDecPec\n        }\n      }\n    }\n  }\n`;\n\nexport const getAdmindashboardCoursetab = gql`\n  query getAdmindashboardCoursetab {\n    getAdmindashboardCoursetab {\n      success\n      error_msg\n      message {\n        allLast30daysCourses {\n          course_name\n          super_sub_category_id {\n            super_sub_category_name\n          }\n          category_id {\n            category_name\n          }\n          parent_sub_category_id {\n            sub_category_name\n          }\n        }\n        availableCoursePec30Pec {\n          IncDecPec\n          valueIncDecPec\n        }\n\n        TotalCourse\n        perMonth\n        TotalCategoryCount\n        availableCoursePec {\n          IncDecPec\n          valueIncDecPec\n        }\n        totalCategoryPec {\n          IncDecPec\n          valueIncDecPec\n        }\n      }\n    }\n  }\n`;\n\n// getting user per week in dashboard learners tab\nexport const getUsersInWeeks = gql`\n  query getUsersInWeeks($weeks: Int) {\n    getUsersInWeeks(weeks: $weeks) {\n      success\n      message {\n        total_Users {\n          _id\n          count\n        }\n        active_Users {\n          _id\n          count\n        }\n      }\n    }\n  }\n`;\n\n// getting login user for dashboard\nexport const getLoginsPerDay = gql`\n  query getLoginsPerDay($days: Int) {\n    getLoginsPerDay(days: $days) {\n      success\n      message {\n        _id\n        count\n      }\n    }\n  }\n`;\n\nexport const getLeranertabCount = gql`\n  query getLeranertabCount {\n    getLeranertabCount {\n      success\n      message {\n        subscribeUser\n        today_login_count\n        total_user_group_count\n        user_group_diff\n        login_percentage {\n          IncDecPec\n          valueIncDecPec\n        }\n        userGrpPec {\n          IncDecPec\n          valueIncDecPec\n        }\n        subscribeUser_percentage {\n          IncDecPec\n          valueIncDecPec\n        }\n      }\n    }\n  }\n`;\n// getting active and inactive users  for dashboard\nexport const getActiveinactiveCount = gql`\n  query getActiveinactiveCount($days: Int) {\n    getActiveinactiveCount(days: $days) {\n      success\n      message {\n        EnrolledActive\n        EnrolledInActive\n        InActiveUser {\n          _id\n          count\n        }\n        ActiveUser {\n          _id\n          count\n        }\n      }\n    }\n  }\n`;\n// getting Professional Student  users  for dashboard\nexport const getProfessionalStudent = gql`\n  query getProfessionalStudent($days: Int) {\n    getProfessionalStudent(days: $days) {\n      success\n      message {\n        student {\n          _id\n          count\n        }\n        professional {\n          _id\n          count\n        }\n      }\n    }\n  }\n`;\n\nexport const getCoursesChart = gql`\n  query getCoursesChart {\n    getCoursesChart {\n      success\n      error_msg\n      data {\n        _id\n        main_cat {\n          _id\n          category_id\n          category_name\n          level\n          main_cat_course_count\n        }\n        sub_cat {\n          _id\n          sub_category_id\n          sub_category_name\n          level\n          sub_cat_course_count\n        }\n        sub_sub_cat {\n          _id\n          super_sub_category_id\n          level\n          sub_sub_cat_course_count\n        }\n      }\n    }\n  }\n`;\n\n// getting enrolled and free course category and sub-category for admin dashboard\nexport const enrolledCourse = gql`\n  query enrolledCourse($days: Int) {\n    enrolledCourse(days: $days) {\n      success\n      enrollcourse\n      freecourse\n      message {\n        count\n        category_id {\n          category_name\n        }\n        parent_sub_category_id {\n          sub_category_name\n        }\n        super_sub_category_id {\n          super_sub_category_name\n        }\n        course {\n          course_name\n        }\n      }\n    }\n  }\n`;\n\nexport const getgroupbyid = gql`\n  query getgroupbyid($group_id: String!) {\n    getgroupbyid(group_id: $group_id) {\n      success\n      error_msg\n      message {\n        _id\n        group_name\n        group_type\n        parent_group_id\n        hierarchy_id\n        admin_id\n        created_on\n        updated_on\n        created_by\n        is_active\n        group_id\n        catalogue_mapping_details {\n          _id\n          admin_id\n          catalogue_id\n          created_on\n          updated_on\n          created_by\n          is_active\n          group_id\n          catalogue_details {\n            _id\n            catalogue_name\n            catalogue_description\n            creator_id\n            catalogue_id\n            created_on\n            updated_on\n            created_by\n            is_active\n          }\n          category_id\n        }\n      }\n    }\n  }\n`;\n\n// getting top 5 course filter data\nexport const getTopfiveDashboardType = gql`\n  query getTopfiveDashboardType($type: String) {\n    getTopfiveDashboardType(type: $type) {\n      success\n      error_msg\n      data {\n        course_name\n        short_description\n      }\n    }\n  }\n`;\n\nexport const getadminexportauditlog = gql`\n  query get_admin_export_auditlog($from_date: String!, $to_date: String!) {\n    get_admin_export_auditlog(from_date: $from_date, to_date: $to_date) {\n      success\n      error_msg\n      message\n    }\n  }\n`;\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NotFoundComponent } from './not-found/not-found.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: './learner/learner.module#LearnerModule',\n     data : {title: 'Welcome to EduTech'}\n  },\n\n  {\n    path: 'Learner',\n    loadChildren: './learner/learner.module#LearnerModule',\n    data : {animation: 'Learner'}\n  },\n  // {\n  //   path: 'Admin',\n  //   loadChildren: './admin/admin.module#AdminModule',\n  //   data : {title: 'Admin '}\n  // },\n  {\n    path: 'Player',\n    loadChildren: './core/core.module#CoreModule',\n    data : {title: 'Player'}\n  },\n  // {\n  //   path: '*',\n  //   // loadChildren: './wca/wca.module#WcaModule',\n  //   data : {title: 'Web Content Authoring'}\n  // },\n  {path: '**', component: NotFoundComponent},\n  // {path: '**', redirectTo: '/404'},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {\n    scrollPositionRestoration: 'enabled',\n    initialNavigation: 'enabled',\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!-- <ngx-spinner bdColor=\\\"rgba(51,51,51,0.8)\\\" size=\\\"medium\\\" color=\\\"#fff\\\" type=\\\"ball-climbing-dot\\\">\\n    <p style=\\\"font-size: 20px; color: white\\\">Loading...</p> -->\\n  <!-- </ngx-spinner> -->\\n\\n  <div [@routeAnimations]=\\\"o && o.activatedRouteData \\n      && o.activatedRouteData['animation']\\\">\\n    <router-outlet #o=\\\"outlet\\\"></router-outlet>\\n</div>\\n<!-- <router-outlet></router-outlet> -->\\n<!-- <ng4-loading-spinner> </ng4-loading-spinner> -->\\n\\n<!-- <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-around center\\\" *ngIf=\\\"isLoader\\\">\\n  <mat-spinner diameter=\\\"50\\\" strokeWidth=\\\"5\\\"></mat-spinner>\\n</div> -->\\n\"","module.exports = \".app-loading .logo {\\n  width: -webkit-fill-available !important;\\n  height: -webkit-fill-available !important;\\n  display: contents; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2F2aW5hc2gvRG9jdW1lbnRzL2NpbnRhbmEvbHhwIHByb2plY3QvV2ViJTIwUG9ydGFsL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksd0NBQXdDO0VBQ3hDLHlDQUF5QztFQUN6QyxpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hcHAtbG9hZGluZyAubG9nbyB7XG4gICAgd2lkdGg6IC13ZWJraXQtZmlsbC1hdmFpbGFibGUgIWltcG9ydGFudDtcbiAgICBoZWlnaHQ6IC13ZWJraXQtZmlsbC1hdmFpbGFibGUgIWltcG9ydGFudDtcbiAgICBkaXNwbGF5OiBjb250ZW50cztcbiAgICBcbiAgfVxuICAiXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { GlobalServiceService } from '././core/services/handlers/global-service.service';\nimport { WcaService } from '../app/wca/services/wca.service';\nimport { Title } from '@angular/platform-browser';\nimport { filter } from 'rxjs/operators';\nimport { CommonServicesService } from '@core/services/common-services.service';\nimport { Subscription } from 'rxjs';\nimport { slideInAnimation } from './router.animation';\nimport { LearnerServicesService } from '@learner/services/learner-services.service';\nimport { environment } from '@env/environment.collageConnect';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [ slideInAnimation ]\n})\nexport class AppComponent implements OnInit {\n  // ipAddress = '';\n  title = 'LXP';\n  isLoader = false;\n  loaderSubscription: Subscription;\n  constructor(private router: Router,\n              private gs: GlobalServiceService,\n              private http: HttpClient,\n              private activatedRoute: ActivatedRoute,\n              private APIService: WcaService,\n              private titleService: Title,\n              private commonService: CommonServicesService,\n              public Lservice: LearnerServicesService,\n\n  ) {\n    // this.getIPAddress();\n    this.commonService.getIpAddressByUrl();\n    // this.getorganizationbyiddetails();\n  }\n\n  ngOnInit() {\n    this.loaderSubscription = this.commonService.loader.subscribe((val) => {\n      this.isLoader = val;\n    });\n    this.router.events.pipe(\n      filter(event => event instanceof NavigationEnd),\n    ).subscribe(() => {\n      const rt = this.getChild(this.activatedRoute);\n      rt.data.subscribe(data => {\n        this.titleService.setTitle(data.title);\n      });\n    });\n\n    this.getIPAddress();\n    // var name = localStorage.getItem('uname') ? localStorage.getItem('uname') : null;\n    // var psd = localStorage.getItem('ps') ? localStorage.getItem('ps') : null;\n    // var login = localStorage.getItem('login') ? localStorage.getItem('login') : null;\n    // var cookie = localStorage.getItem('remember_me') ? localStorage.getItem('remember_me') : 'false';\n    // var ps = atob(psd)\n    // if (login == 'true') {\n    //   if (cookie == 'true') {\n    //     if ((name || psd) == null) {\n    //       this.router.navigate([\"/Learner/login\"]);\n    //     }\n    //   } else {\n    //     // Commented by rajesh because whenever i will reload the page it clearing my localstorage\n    //     // Yeah Rajesh, u need to enable remember me for this - Mythreyi\n    //     //  If i am first time register i don't have remember me its giving lot of problem  :: ankit\n    //     //  I think now the issue will get resolved - Mythreyi\n    //     localStorage.clear();\n    //   }\n    // }\n  }\n\n  getChild(activatedRoute: ActivatedRoute) {\n    if (activatedRoute.firstChild) {\n      return this.getChild(activatedRoute.firstChild);\n    } else {\n      return activatedRoute;\n    }\n\n  }\n\n  getIPAddress() {\n    // this.http.get(this.commonService.getIpAddressByUrl()).subscribe((res: any) => {\n    //   this.ipAddress = res.ip;\n    //   localStorage.setItem('Systemip', this.ipAddress ? this.ipAddress : '' );\n    // });\n  }\n\n  ngOnDestroy(): void {\n    this.loaderSubscription.unsubscribe();\n  }\n\n//   getorganizationbyiddetails() {\n//     const organizationid = environment.orgId;\n//     if (organizationid === '') {\n//       // localStorage.clear();\n//       localStorage.removeItem('organizationDetails');\n//     }\n\n//     this.Lservice\n//     .get_organization_by_id(organizationid)\n//     .subscribe((result: any) => {\n//       console.log(result, 'resultdata');\n//       if (result.data?.get_organization_by_id?.success) {\n//         localStorage.setItem('organizationDetails', JSON.stringify(result.data?.get_organization_by_id?.message));\n//       }\n//     });\n// }\n}\n","// angular\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { APP_BASE_HREF, PlatformLocation } from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n// others\nimport { Ng4LoadingSpinnerModule } from 'ng4-loading-spinner';\nimport { Ng5SliderModule } from 'ng5-slider';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n// local\nimport { MaterialModule } from '@core/material.module';\nimport { GraphqlModule } from './graphql/graphql.modules';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AlertComponentComponent } from '@core/shared/alert-component/alert-component.component';\n// import { DialogComponent } from './wca/pages/dialog/dialog.component';\nimport { MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material';\nimport { MAT_TABS_CONFIG } from '@angular/material';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { HTTP_INTERCEPTORS, HttpInterceptor } from '@angular/common/http';\nimport { ErrorInterceptor } from '@core/services/_helpers';\nimport { PdfJsViewerModule } from 'ng2-pdfjs-viewer';\nimport { ConfigsLoaderService } from '@core/services/configs-loader.service';\nimport { NotFoundComponent } from './not-found/not-found.component';\n// import { ChartsModule } from 'ng2-charts';\n\n// import { JwtInterceptor } from './core/services/_helpers/jwt.interceptor';\n// import { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nexport function getBaseHref(platformLocation: PlatformLocation): string {\n  return platformLocation.getBaseHrefFromDOM();\n}\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AlertComponentComponent,\n    // DialogComponent,\n    NotFoundComponent,\n  ],\n  imports: [\n    Ng4LoadingSpinnerModule.forRoot(),\n    MaterialModule,\n    // ChartsModule,\n    GraphqlModule,\n    DragDropModule,\n    BrowserAnimationsModule,\n    Ng5SliderModule,\n    PdfJsViewerModule,\n    ToastrModule.forRoot({\n      timeOut: 4000,\n      positionClass: 'toast-top-right',\n      maxOpened: 1,\n      preventDuplicates: true,\n      autoDismiss: true\n    }),\n    NgxSpinnerModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    GraphqlModule\n  ],\n  providers: [AlertComponentComponent,\n    {\n      provide: APP_BASE_HREF,\n      useFactory: getBaseHref,\n      deps: [PlatformLocation, ConfigsLoaderService]\n    },\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: true } },\n    { provide: MAT_TABS_CONFIG, useValue: { animationDuration: '0ms' } },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA],\n  entryComponents: [AlertComponentComponent]\n})\nexport class AppModule { }\nexport function appInitializerFactory(configsLoaderService: ConfigsLoaderService) {\n  return () => configsLoaderService.loadConfigs();\n}\n","import { NgModule } from '@angular/core';\n\nimport {\n  MatButtonModule,\n  MatMenuModule,\n  MatInputModule,\n  MatToolbarModule,\n  MatCheckboxModule,\n  MatFormFieldModule,\n  MatIconModule,\n  MatCardModule,\n  MatGridListModule,\n  MatSelectModule,\n  MatRadioModule,\n  MatDialogModule,\n  MatChipsModule,\n  MatTooltipModule,\n  MatDialogRef,\n  MatTabsModule,\n  MatProgressBarModule,\n  MatAutocompleteModule,\n  MatExpansionModule,\n  MatTableModule,\n  MatSortModule,\n  MatPaginatorModule,\n  MatTreeModule,\n  MatDividerModule,\n  MatProgressSpinnerModule,\n  MatDatepickerModule,\n  MatRippleModule,\n  MatBadgeModule,\n  MatButtonToggleModule\n} from '@angular/material';\n\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatCardModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatTabsModule,\n    MatTooltipModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    CommonModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatTreeModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n    MatDatepickerModule,\n    MatRippleModule,\n    MatBadgeModule,\n    MatButtonToggleModule\n  ],\n  exports: [\n    MatButtonModule,\n    MatMenuModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatCardModule,\n    MatGridListModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatDialogModule,\n    MatTooltipModule,\n    MatTabsModule,\n    MatChipsModule,\n    MatProgressBarModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    MatTreeModule,\n    MatDividerModule,\n    MatProgressSpinnerModule,\n    MatDatepickerModule,\n    MatRippleModule,\n    MatBadgeModule,\n    MatButtonToggleModule\n  ],\n  providers: [\n    {\n      provide: MatDialogRef,\n      useValue: {}\n    },\n  ],\n  declarations: [\n\n  ]\n})\nexport class MaterialModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { AlertServiceService } from '../handlers/alert-service.service';\nimport { ToastrService } from 'ngx-toastr';\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private toastr: ToastrService,\n    private alert: AlertServiceService,\n    private router: Router,\n  ) { }\n\n  // Added by Mythreyi\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const userDetailes = JSON.parse(localStorage.getItem('UserDetails')) || JSON.parse(sessionStorage.getItem('UserDetails')) || null;\n    // const role = localStorage.getItem('role') || sessionStorage.getItem('role') || null;\n    // console.log('role-----',role)\n    // for learner ------> 1\n    // debugger\n    const adminUrl = state.url.includes('Admin');\n    const learnerUrl = state.url.includes('Learner');\n    if (userDetailes != null) {\n      // userdetail is present // authenticated user\n      // url should not start from admin - can be /Larner or anything\n      // if profile updated and trying to go login/reg\n      if (state.url === '/Learner' || state.url === '/Learner/login' || state.url === '/Learner/register'\n        || state.url === '/Learner/otp' || state.url === '/Learner/recover'\n        || state.url === '/Learner/password' || state.url === '/Learner/recoverotp'\n        || state.url === '/Learner/resetpassword' || state.url === '/Learner/terms' || state.url === '/' || adminUrl) {\n        this.router.navigate(['/Learner/MyCourse']);\n        return false;\n      } else if (!userDetailes.is_profile_updated) {\n        // if profile not updated and trying to access other screens, redirect to profile \n        //Iggnite Changes done by Afser on Profile update not Mandtory\n        // if (state.url !== '/Learner/profile') {\n        //   this.router.navigate(['/Learner/profile']);\n        //   this.toastr.warning('Your profile is incomplete !', 'Please provide data for all mandatory fields', { closeButton: true });\n        //   // this.alert.openAlert('Your profile is incomplete !', 'Please fill all mandatory details');\n        //   return false;\n        // } else {// if url is profile or anything\n        //   return true;\n        // }\n        return true;\n      } else {\n        return true;\n      }\n      // end of url navigations for logged in learner ------> 1\n    } else if ((userDetailes == null)) { // user detail is not present in local storage\n      if (state.url === '/Learner' || state.url === '/Learner/login' || state.url === '/Learner/register'\n        || state.url === '/Learner/otp' || state.url === '/Learner/recover'\n        || state.url === '/Learner/password' || state.url === '/Learner/recoverotp'\n        || state.url === '/Learner/resetpassword' || state.url === '/Learner/terms' || state.url === '/') {\n        return true;\n      } else {\n        this.router.navigate(['/Learner']);\n        return false;\n      }\n    } else {\n      // console.log('role--33334444---',role)\n      this.router.navigate(['/Learner']);\n      return false;\n    }\n  }\n}\n","import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CommonServicesService } from '../common-services.service';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    \n  constructor(private CommonService: CommonServicesService) { }\n  \n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        this.showLoader();\n        return next.handle(request).pipe(tap((event: HttpEvent<any>) => {\n          if (event instanceof HttpResponse) {\n            this.onEnd();\n          }\n        },\n          (err: any) => {\n            this.onEnd();\n          }));\n      }\n      private onEnd(): void {\n        this.hideLoader();\n      }\n      private showLoader(): void {\n        const isLoad = this.CommonService.isLoad;\n        this.CommonService.loader$.next(isLoad);\n      }\n      private hideLoader(): void {\n        this.CommonService.loader$.next(false);\n        this.CommonService.isLoad = true;\n      }\n    }","export * from './mock-services';\nexport * from './auth.guard';\nexport * from './jwt.interceptor';\nexport * from './error.interceptor';\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AdminServicesService } from '../../../admin/services/admin-services.service';\n\n// import { AuthenticationService } from '../_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private auth: AdminServicesService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        // const currentUser = localStorage.getItem('token');\n        // console.log(currentUser);\n        // let currentUser = this.auth.getToken;\n        // if (currentUser && currentUser.token) {\n        //     request = request.clone({\n        //         setHeaders: {\n        //             Authorization: `Bearer ${currentUser.token}`\n        //         }\n        //     });\n        // }\n\n        return next.handle(request);\n    }    \n\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\n\n// array in local storage for registered users\nlet users = JSON.parse(localStorage.getItem('users')) || [];\n\n@Injectable()\nexport class FakeBackendInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const { url, method, headers, body } = request;\n        // debugger\n        // wrap in delayed observable to simulate server api call\n        return of(null)\n            .pipe(mergeMap(handleRoute))\n            .pipe(materialize()) // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\n            .pipe(delay(500))\n            .pipe(dematerialize());\n\n        function handleRoute() {\n            switch (true) {\n                case url.endsWith('/users/authenticate') && method === 'POST':\n                    return authenticate();\n                case url.endsWith('/users/register') && method === 'POST':\n                    return register();\n                case url.endsWith('/users') && method === 'GET':\n                    return getUsers();\n                case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                    return deleteUser();\n                default:\n                    // pass through any requests not handled above\n                    return next.handle(request);\n            }    \n        }\n\n        // route functions\n\n        function authenticate() {\n            const { username, password } = body;\n            const user = users.find(x => x.email === username && x.password === password);\n            if (!user) return error('Username or password is incorrect');\n            return ok({\n                id: user.id,\n                username: user.username,\n                firstName: user.firstName,\n                lastName: user.lastName,\n                email : user.email,\n                token: 'fake-jwt-token'\n            })\n        }\n\n        function register() {\n            const user = body\n\n            if (users.find(x => x.email === user.email)) {\n                return error('Username \"' + user.email + '\" is already taken')\n            }\n\n            user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n            users.push(user);\n            localStorage.setItem('users', JSON.stringify(users));\n\n            return ok();\n        }\n\n        function getUsers() {\n            if (!isLoggedIn()) return unauthorized();\n            return ok(users);\n        }\n\n        function deleteUser() {\n            if (!isLoggedIn()) return unauthorized();\n\n            users = users.filter(x => x.id !== idFromUrl());\n            localStorage.setItem('users', JSON.stringify(users));\n            return ok();\n        }\n\n        // helper functions\n\n        function ok(body?) {\n            return of(new HttpResponse({ status: 200, body }))\n        }\n\n        function error(message) {\n            return throwError({ error: { message } });\n        }\n\n        function unauthorized() {\n            return throwError({ status: 401, error: { message: 'Unauthorised' } });\n        }\n\n        function isLoggedIn() {\n            return headers.get('Authorization') === 'Bearer fake-jwt-token';\n        }\n\n        function idFromUrl() {\n            const urlParts = url.split('/');\n            return parseInt(urlParts[urlParts.length - 1]);\n        }\n    }\n}\n\nexport const fakeBackendProvider = {\n    // use fake backend in place of Http service for backend-less development\n    provide: HTTP_INTERCEPTORS,\n    useClass: FakeBackendInterceptor,\n    multi: true\n};","import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\nimport {\n  logout, viewcourse, view_wishlist, list_content, syllabus_of_particular_scorm,\n  getCoursesByName, get_all_course_by_usergroup, getAllNotifications\n} from '@core/services/operations/common_query';\nimport {\n  add_to_wishlist, delete_wishlist, getPlayerStatus, geturl, enrollcourse,\n  getCourseCategorySearch, getDetailsCount\n} from '@core/services/operations/common_mutation';\nimport { environment } from '@env/environment';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonServicesService {\n\n  constructor(private Apollo: Apollo, private http: HttpClient, ) { }\n  // Search Component for search all courses\n  globalSearch$ = new Subject<any>();\n  globalSearch = this.globalSearch$.asObservable();\n\n  // Global for all courses(Guideline search to Category and View all courses)\n  globalCourses$ = new Subject<any>();\n  globalCourses = this.globalCourses$.asObservable();\n\n  // Guideline search to Category for Clear all filter\n  globalFilterCategory$ = new Subject<any>();\n  globalFilterCategory = this.globalFilterCategory$.asObservable();\n\n  // Guideline search to Category for removing Category from applied filter\n  globalCategory$ = new Subject<any>();\n  globalCategory = this.globalCategory$.asObservable();\n\n  // Category to view all courses component for applying category\n  globalAllCategory$ = new Subject<any>();\n  globalAllCategory = this.globalAllCategory$.asObservable();\n\n  // Category to guideline search component\n  selectedCategory$ = new Subject<any>();\n  selectedCategory = this.selectedCategory$.asObservable();\n\n  // Category to view all courses component to show category on applied filter\n  appliedCategory$ = new Subject<any>();\n  appliedCategory = this.appliedCategory$.asObservable();\n\n  loader$ = new Subject<boolean>();\n  loader = this.loader$.asObservable();\n\n  isLoad = true;\n\n  notificationCount$ = new Subject<any>();\n  notificationCount = this.notificationCount$.asObservable();\n\n  notificationStatus$ = new Subject<any>();\n  notificationStatus = this.notificationStatus$.asObservable();\n\n  openAvailCourcePopup$ = new Subject<any>();\n  openAvailCourcePopup = this.openAvailCourcePopup$.asObservable();\n\n  closeAvailPopup$ = new Subject<any>();\n  closeAvailPopup = this.closeAvailPopup$.asObservable();\n  \n  openNotification$ = new Subject<any>();\n  openNotification = this.openNotification$.asObservable();\n\n  // While closing video palyer, pause video in course preview page\n  pauseVideo$ = new Subject<any>();\n  pauseVideo = this.pauseVideo$.asObservable();\n\n  logout(user_id, is_admin) {\n    // this.Apollo.getClient().resetStore();\n    return this.Apollo.query({\n      query: logout,\n      variables: {\n        user_id,\n        is_admin\n      }\n    });\n  }\n\n  viewCurseByID(course_id, user_id) {\n    return this.Apollo.query({\n      query: viewcourse,\n      variables: {\n        course_id,\n        user_id\n      }\n    });\n  }\n\n  viewWishlist(userid, pagenumber) {\n    return this.Apollo.query({\n      query: view_wishlist,\n      variables: {\n        user_id: userid,\n        pagenumber\n      }\n    });\n  }\n\n  addWishlist(course_id, user_id) {\n    return this.Apollo.query({\n      query: add_to_wishlist,\n      variables: {\n        course_id,\n        user_id\n      }\n    });\n  }\n\n  removeWishlist(wishlist_id) {\n    return this.Apollo.query({\n      query: delete_wishlist,\n      variables: {\n        wishlist_id,\n      }\n    });\n  }\n  list_content() {\n    return this.Apollo.query({\n      query: list_content,\n    });\n  }\n\n  syllabus_of_particular_scorm(contentid) {\n    return this.Apollo.query({\n      query: syllabus_of_particular_scorm,\n      variables: {\n        contentid,\n      }\n    });\n  }\n  getPlayerStatus(id) {\n    return this.Apollo.query({\n      query: getPlayerStatus,\n      variables: {\n        user_id: id\n      }\n    });\n  }\n\n  geturl(courseid) {\n    return this.Apollo.query({\n      query: geturl,\n      variables: {\n        courseid\n      }\n    });\n  }\n\n  getCoursesByName(courseName, pagenumber) {\n    return this.Apollo.query({\n      query: getCoursesByName,\n      variables: {\n        courseName,\n        pagenumber\n      }\n    });\n  }\n  getallcourses(groupid, pagenumber, sort_type) {\n    return this.Apollo.query({\n      query: get_all_course_by_usergroup,\n      variables: {\n        group_id: groupid,\n        pagenumber,\n        sort_type\n      }\n    });\n  }\n  enrollcourse(id, group_id, course_id) {\n    return this.Apollo.query({\n      query: enrollcourse,\n      variables: {\n        user_id: id,\n        group_id,\n        course_id,\n      }\n    });\n  }\n  postGuildelineSearchData(category: any, sub_category: any, super_sub_category: any, course_language: any, course_mode: any,\n                           author_details: any, partner_details: any,\n                           pagenumber, perPage, publishedToDate, publishedFromDate) {\n    return this.Apollo.query({\n      query: getCourseCategorySearch,\n      variables: {\n        category,\n        sub_category,\n        super_sub_category,\n        course_language,\n        course_mode,\n        author_details,\n        partner_details,\n\n        pagenumber,\n        perPage,\n        publishedFromDate,\n        publishedToDate\n      }\n    });\n  }\n  getGuidelineSearch() {\n    return this.Apollo.query({\n      query: getDetailsCount\n    });\n  }\n  getIpAddressByUrl() {\n    // return 'http://api.ipify.org/?format=json';\n    this.http.get(environment.systemIp).subscribe((res: any) => {\n      // this.ipAddress = res.ip;\n      localStorage.setItem('Systemip', res.ip);\n    });\n  }\n  \n  getAllNotifications(userId, userType, pagenumber) {\n    return this.Apollo.query({\n      query: getAllNotifications,\n      variables: {\n        userId,\n        userType,\n        pagenumber\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\n/**\n * Retreive the values from the configs.json file under the assets \n * directory. At release time, azure pipelines replaces the values \n * in the file based on the variables configured in azure devops. \n * \n * Throughout the app, other services can reference the configs via this \n * service, instead of referecing the environment.ts file so that we can deploy\n * the same artifact to multiple environments without having to build multiple \n * times. \n */\nexport class ConfigsLoaderService {\n\n   // If you app has an interceptor and you don't want it to intercept the \n   // loading of the file, you can use a seprate HttpClient instance. \n   // For instance, in my real application,  I have an interceptor that \n   // intercepts and inserts access token to the header of an http request. \n   // I don't want the interceptor to intercept the loading file request \n   // because it would require an access token with is not available at \n   // initialization time.  \n   private httpClient: HttpClient;\n   private configs: Configs;\n\n   constructor(handler: HttpBackend) {\n    this.httpClient = new HttpClient(handler); \n  }\n\n  get ApiUrl() {\n    return this.configs.apiUrl; \n  }\n  get ScormUrl() {\n    return this.configs.scormUrl; \n  }\n  get ApiUrlImg() {\n    return this.configs.apiUrlImg; \n  }\n  get CreateCourseApi() {\n    return this.configs.createCourseApi; \n  }\n  get Wcaapiurl() {\n    return this.configs.wcaapiurl; \n  }\n  get Domain() {\n    return this.configs.domain; \n  }\n\n\n  public async loadConfigs() : Promise<any> {\n    return this.httpClient.get('assets/configs.json').pipe(settings => settings)\n      .toPromise()\n      .then(settings => {\n        this.configs = settings as Configs; \n      });\n  }\n\n}\n\nexport interface Configs {\n//   ApiUrl: string, \n//   ConfigsLoadedFrom: string,\n  apiUrl: string,\n  scormUrl: string, \n  apiUrlImg: string, \n  createCourseApi: string,\n  wcaapiurl: string, \n  domain : string, \n}","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { AlertComponentComponent } from '@core/shared/alert-component/alert-component.component';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertServiceService {\n  constructor(public matDialog: MatDialog) { }\n\n  public openAlert(title, msg) {\n    if (this.matDialog.openDialogs.length === 0) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.data = { title, msg: msg ? msg : null, type: 'showClose' };\n      dialogConfig.width = '30%',\n      dialogConfig.panelClass = 'custom-modalbox',\n      dialogConfig.hasBackdrop = true;\n      dialogConfig.disableClose = true;\n      const dialogRef = this.matDialog.open(AlertComponentComponent, dialogConfig);\n    }\n  }\n\n  public openConfirmAlert(title, msg, confirmText?, cancelText?) {\n    if (this.matDialog.openDialogs.length === 0) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.data = { title, msg: msg ? msg : null, type: 'confirmAlert', confirmText : confirmText ? confirmText : 'Yes' ,\n    cancelText : cancelText ? cancelText : 'No'};\n      dialogConfig.width = '30%',\n      dialogConfig.disableClose = true;\n      dialogConfig.panelClass = 'custom-modalbox';\n      const dialogRef = this.matDialog.open(AlertComponentComponent, dialogConfig);\n      return new Promise((resolve) => {\n        dialogRef.afterClosed().subscribe(result => {\n          resolve(result);\n        });\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertServiceService } from '@core/services/handlers/alert-service.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { LocationStrategy } from '@angular/common';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalServiceService {\n\n  private $theme = new BehaviorSubject('theme-3-primary');\n  theme = this.$theme.asObservable();\n  private $callWishlist = new BehaviorSubject(false);\n  callWishlist = this.$callWishlist.asObservable();\n\n  private $adminName = new BehaviorSubject('admin');\n  adminName = this.$adminName.asObservable();\n\n  private $navigation = new BehaviorSubject('myCourse');\n  navigation = this.$navigation.asObservable();\n\n  constructor(public route: Router, public alert: AlertServiceService, private locationStrategy: LocationStrategy,\n  ) { }\n\n  checkLogout() {\n    if (this.route.url !== '/' && this.route.url !== '/Learner/login' && this.route.url !== '/Learner' &&\n      this.route.url !== '/Admin/login') {\n      // const adminDetails = JSON.parse(localStorage.getItem('adminDetails')) || null;\n      // const role = localStorage.getItem('role') || sessionStorage.getItem('role') || null;\n      const userDetail = JSON.parse(localStorage.getItem('UserDetails')) || JSON.parse(sessionStorage.getItem('UserDetails')) || null;\n      // console.log(userDetail);\n      if ((userDetail != null && userDetail !== undefined)) {\n        return userDetail;\n        // } else if ((adminDetails != null || adminDetails !== undefined) && role === 'admin') {\n        //   return adminDetails;\n      } else {\n        this.alert.openAlert('Logged Out!', 'You have been logged out. Please login to continue');\n        this.route.navigate(['/Learner/login']);\n      }\n    }\n  }\n\n  checkProfileFilled() {\n    const userDetail = JSON.parse(localStorage.getItem('UserDetails')) || null;\n    if (userDetail && !userDetail.is_profile_updated) {\n      //Afser'schanges on Profile not Mandtory change no #3\n      // this.route.navigate(['/Learner/profile']);\n      // this.alert.openAlert('Your profile is incomplete !', 'Please fill all mandatory details');\n      return true;\n    } else {\n      return true;\n    }\n  }\n\n  canCallWishlist(callWishlist: boolean) {\n    this.$callWishlist.next(callWishlist);\n  }\n\n  getAdminName(name: any) {\n    this.$adminName.next(name);\n  }\n\n  getNavigation(navigation: any) {\n    this.$navigation.next(navigation);\n  }\n\n  getThemeName(theme: string) {\n    this.$theme.next(theme);\n  }\n\n\n  preventBackButton() {\n    history.pushState(null, null, location.href);\n    this.locationStrategy.onPopState(() => {\n      history.pushState(null, null, location.href);\n    });\n  }\n}\n","import gql from \"graphql-tag\";\n\nexport const add_to_wishlist = gql`\nmutation add_to_wishlist($user_id: String, $course_id: String){\n    add_to_wishlist(user_id: $user_id, course_id: $course_id) {\n      success\n      message\n      error_msg,\n      wishlist_id\n    }\n  }`;\n\nexport const delete_wishlist = gql`\n  mutation delete_wishlist($wishlist_id: String){\n    delete_wishlist(wishlist_id: $wishlist_id) {\n      success\n      message\n      error_msg\n    }\n}`;\n\n\nexport const getPlayerStatus = gql`\n  mutation getPlayerStatus($user_id: String){\n    getPlayerStatus(user_id: $user_id) {\n      message{\n        course_dtl{\n          location\n          status\n        }\n      }\n      success\n    }\n}`;\nexport const geturl = gql`\nmutation geturl($courseid: String!) {\n    geturl(courseid: $courseid) {\n      message\n      success\n    }\n  }\n`;\nexport const enrollcourse = gql`\nmutation enrollcourse($user_id: String!, $group_id:String!, $course_id: String!) {\n    enrollcourse( user_id:$user_id, group_id:$group_id,course_id: $course_id) {\n      message\n      success\n      error_msg\n    }\n  }\n`;\nexport const getCourseCategorySearch = gql`\n  mutation getCourseCategorySearch($category: [String]!,$sub_category:[String]!, $super_sub_category: [String]!,\n    $course_language: [String],  $course_mode:[String],$author_details:[String],$partner_details:[String],\n    $pagenumber:Int!,$perPage: Int!, $publishedToDate: String, $publishedFromDate: String ) {\n    getCourseCategorySearch(category:$category,sub_category:$sub_category,super_sub_category:$super_sub_category,\n      course_language:$course_language,course_mode:$course_mode,author_details:$author_details,partner_details:$partner_details,\n      pagenumber:$pagenumber,perPage:$perPage, publishedToDate:$publishedToDate,\n       publishedFromDate:$publishedFromDate\n      ) {\n        success\n        message    \n        data{\n          course_id\n          course_description\n          course_name\n          version\n          location\n          course_start_datetime\n          course_end_datetime\n          advertised_start\n          course_img_url\n          social_sharing_url\n          certificate_display_behaviour\n          certificates_show_before_end\n          certificate_html_view_enabled\n          has_any_active_web_certificate\n          certificate_name\n          lowest_passing_grade\n          mobile_available\n          visible_to_staff_only\n          enrollment_start\n          enrollment_end\n          invitation_only\n          max_student_enrollments_allowed\n          announcement\n          catalog_visibility\n          course_video_url\n          short_description\n          self_paced\n          marketing_url\n          course_language\n          certificate_available_date\n          article_count\n          downloadable_resource_count\n          course_level\n          step_towards\n          rating\n          price\n          what_will_you_learn\n          course_category\n          course_type\n          groupid\n          created_by\n          updated_by\n          admin_id\n          is_published\n          course_mode\n          preview_video\n          learner_count\n          is_active\n          published_by\n          publisher_id\n          updated_by_id\n          user_role\n          user_id\n          user_name\n          published_on\n          updated_at\n          created_at\n          super_sub_category_id\n          pre_requisite\n          takeway_details{\n            text\n            description\n            what_will_you_learn\n            media\n          }\n          coursepartner_details{\n             name\n             image\n          }\n          category_id\n          parent_sub_category_id\n          course_content_details\n          author_details{\n            author_name\n            description\n            image\n          }\n        }\n        languageCount{\n        course_language\n        count\n        }\n        instructor{\n        authordetails\n        count\n        }\n        partner{\n        coursepartnerdetails\n        count\n        }\n        courseMode{\n        course_mode\n        count\n        }    \n  }\n  }\n`;\nexport const getDetailsCount = gql`\n    query getDetailsCount{\n      getDetailsCount {\n        success\n         error_msg\n        message{\n          course_data{\n            course_language\n            count\n          }\n      author_data{\n        authordetails\n        count\n      }\n      coursepartner_data{\n        coursepartnerdetails\n        count\n      }\n      coursemode_data{\n        course_mode\n        count\n      }\n      other_data{\n        fieldCount\n        affectedRows\n        insertId\n        serverStatus\n        warningCount\n        message\n        protocol41\n        changedRows\n      }\n    }\n      }\n  }`;\n","import gql from 'graphql-tag';\n\nexport const logout = gql`\n  query logout($user_id: String, $is_admin: Boolean){\n    logout(user_id: $user_id, is_admin: $is_admin) {\n      success\n      message\n      error_msg\n    }\n  }`;\n\n\n  \nexport const getAllNotifications = gql`\n  query getAllNotifications($userId: String!, $userType: String, $pagenumber:Int!) {\n    getAllNotifications(userId: $userId, userType: $userType, pagenumber: $pagenumber) {\n    message\n    success\n    unReadCount\n    totalCount\n    data {\n      _id\n      userObjId\n      userId\n      notificationType\n      notificationMessage\n      created_on\n      updated_on\n      timeAgo\n      notifiedStatus\n      is_active\n    }\n    }\n    }\n    `;\n\nexport const viewcourse = gql`\n  query viewcourse($course_id: String,$user_id: String){\n    viewcourse(course_id: $course_id,user_id:$user_id) {\n      success\n      error_msg\n      message{\n        totalLearners\n        course_enrollment_status\n        course_id\n        course_description\n        course_long_description\n        course_name\n        created_at\n        updated_at\n        version\n        location\n        course_start_datetime\n        course_end_datetime\n        advertised_start\n        course_img_url\n        social_sharing_url\n        certificate_display_behaviour\n        certificates_show_before_end\n        certificate_html_view_enabled\n        has_any_active_web_certificate\n        certificate_name\n        lowest_passing_grade\n        mobile_available\n        visible_to_staff_only\n        enrollment_start\n        enrollment_end\n        invitation_only\n        max_student_enrollments_allowed\n        announcement\n        catalog_visibility\n        course_video_url\n        short_description\n        self_paced\n        marketing_url\n        course_language\n        certificate_available_date\n        article_count\n        downloadable_resource_count\n        course_level\n        step_towards\n        rating\n        price\n        what_will_you_learn\n        course_category\n        course_type\n        groupid\n        created_by\n        updated_by\n        admin_id\n        is_published\n        course_mode\n        preview_video\n        learner_count\n        is_active\n        published_by\n        publisher_id\n        updated_by_id\n        published_on\n        user_role\n        user_id\n        user_name\n       topicData{\n          moduleData{\n          moduleid\n          modulename\n          modulestatus\n          moduledetails{\n          topicname\n          topicstatus\n          topictime\n          }\n          }\n          }\n        people_also_viewed{\n          course_id\n          course_description\n          course_name\n          created_at\n          updated_at\n          version\n          location\n          course_start_datetime\n          course_end_datetime\n          advertised_start\n          course_img_url\n          social_sharing_url\n          certificate_display_behaviour\n          certificates_show_before_end\n          certificate_html_view_enabled\n          has_any_active_web_certificate\n          certificate_name\n          lowest_passing_grade\n          mobile_available\n          visible_to_staff_only\n          enrollment_start\n          enrollment_end\n          invitation_only\n          max_student_enrollments_allowed\n          announcement\n          catalog_visibility\n          course_video_url\n          short_description\n          self_paced\n          marketing_url\n          course_language\n          certificate_available_date\n          article_count\n          downloadable_resource_count\n          course_level\n          step_towards\n          rating\n          price\n          what_will_you_learn\n          course_category\n          course_type\n          groupid\n          created_by\n          updated_by\n          admin_id\n          is_published\n          course_mode\n          preview_video\n          learner_count\n          is_active\n          published_by\n          publisher_id\n          updated_by_id\n          published_on\n          user_role\n          user_id\n          user_name\n          pre_requisite{\n            name\n            image\n          }\n          takeway_details{\n            text\n            description\n            what_will_you_learn\n            media\n          }\n          coursepartner_details{\n            name\n            image\n          }\n          category_id\n          parent_sub_category_id\n          course_content_details{\n            name\n            type\n            is_active\n            parent_id\n            description\n            sub_section_id\n            file_content{\n              video_url\n              image_url\n              audio_url\n              file_url\n            }\n            unit{\n              name\n              type\n              is_active\n              parent_id\n              description\n              sub_section_id\n              file_content{\n                video_url\n                image_url\n                audio_url\n                file_url\n              }\n            }\n          }\n          author_details{\n            author_name\n            description\n            image\n          }\n        }\n        frequently_bought_together{\n          course_id\n          course_description\n          course_name\n          created_at\n          updated_at\n          version\n          location\n          course_start_datetime\n          course_end_datetime\n          advertised_start\n          course_img_url\n          social_sharing_url\n          certificate_display_behaviour\n          certificates_show_before_end\n          certificate_html_view_enabled\n          has_any_active_web_certificate\n          certificate_name\n          lowest_passing_grade\n          mobile_available\n          visible_to_staff_only\n          enrollment_start\n          enrollment_end\n          invitation_only\n          max_student_enrollments_allowed\n          announcement\n          catalog_visibility\n          course_video_url\n          short_description\n          self_paced\n          marketing_url\n          course_language\n          certificate_available_date\n          article_count\n          downloadable_resource_count\n          course_level\n          step_towards\n          rating\n          price\n          what_will_you_learn\n          course_category\n          course_type\n          groupid\n          created_by\n          updated_by\n          admin_id\n          is_published\n          course_mode\n          preview_video\n          learner_count\n          is_active\n          published_by\n          publisher_id\n          updated_by_id\n          published_on\n          user_role\n          user_id\n          user_name\n          pre_requisite{\n            name\n            image\n          }\n          takeway_details{\n            text\n            description\n            what_will_you_learn\n            media\n          }\n          coursepartner_details{\n            name\n            image\n          }\n          category_id\n          parent_sub_category_id\n          course_content_details{\n            name\n            type\n            is_active\n            parent_id\n            description\n            sub_section_id\n            file_content{\n              video_url\n              image_url\n              audio_url\n              file_url\n            }\n            unit{\n              name\n              type\n              is_active\n              parent_id\n              description\n              sub_section_id\n              file_content{\n                video_url\n                image_url\n                audio_url\n                file_url\n              }\n            }\n          }\n          author_details{\n            author_name\n            description\n            image\n          }\n        }\n        review_and_faq{\n          _id\n          user_id\n          user_name\n          course_id\n          rating\n          review\n          created_on\n          updated_on\n          is_active\n          faq{\n            _id\n            course_id\n            is_active\n            qa{\n              question\n              answer\n            }\n          }\n        }\n        pre_requisite{\n          name\n          image\n        }\n        takeway_details{\n          text\n          description\n          what_will_you_learn\n          media\n        }\n        coursepartner_details{\n          name\n          image\n        }\n        category_id\n        parent_sub_category_id\n        course_content_details{\n          name\n          type\n          is_active\n          parent_id\n          description\n          sub_section_id\n          file_content{\n            video_url\n            image_url\n            audio_url\n            file_url\n          }\n          unit{\n            name\n            type\n            is_active\n            parent_id\n            description\n            sub_section_id\n            file_content{\n              video_url\n              image_url\n              audio_url\n              file_url\n            }\n          }\n        }\n        author_details{\n          author_name\n          description\n          image\n        }\n      }\n    }\n  }`;\n\nexport const view_wishlist = gql`\n  query view_wishlist($user_id: String, $pagenumber: Int ){\n    view_wishlist(user_id: $user_id, pagenumber: $pagenumber) {\n      success\n      error_msg\n      message{\n        _id\n        course_id\n        created_on\n        is_active\n        user_id\n        certificate_name\n        course_description\n        course_img_url\n        course_name\n        max_student_enrollments_allowed\n        price\n        rating\n        short_description\n        enrollment_status\n        }\n    }\n  }`;\n\n\nexport const list_content = gql`\n    query list_content{\n      list_content {\n        success\n        message\n        data{\n          scorm_id_mstr\n          package\n          package_dec\n        }\n      }\n  }`;\n\nexport const syllabus_of_particular_scorm = gql`\n  query syllabus_of_particular_scorm($contentid: String){\n    syllabus_of_particular_scorm(contentid: $contentid) {\n      success\n      message\n      data{\n        title\n        children{\n          title\n          link\n        }\n      }\n    }\n  }`;\nexport const getCoursesByName = gql`\n    query getCoursesByName($courseName : String!, $pagenumber : String!){\n      getCoursesByName(courseName: $courseName, pagenumber: $pagenumber) {\n        success\n        error_msg\n        message{\n          course_id\n           course_description\n           course_name\n           version\n           location\n           course_start_datetime\n           course_end_datetime\n           advertised_start\n           course_img_url\n           social_sharing_url\n           certificate_display_behaviour\n           certificates_show_before_end\n           certificate_html_view_enabled\n           has_any_active_web_certificate\n           certificate_name\n           lowest_passing_grade\n           mobile_available\n           visible_to_staff_only\n           enrollment_start\n           enrollment_end\n           invitation_only\n           max_student_enrollments_allowed\n           announcement\n           catalog_visibility\n           course_video_url\n           short_description\n           self_paced\n           marketing_url\n           course_language\n           certificate_available_date\n           author_details{\n              author_name\n              description\n              image\n            }\n           course_content_details{\n              name\n              type\n              is_active\n              parent_id\n              description\n              sub_section_id\n              file_content{\n                video_url\n                image_url\n                audio_url\n                file_url\n              }\n              unit{\n                  name\n                  type\n                  is_active\n                  parent_id\n                  description\n                  sub_section_id\n                  file_content{\n                    video_url\n                    image_url\n                    audio_url\n                    file_url\n                  }\n                }\n            }\n           article_count\n           downloadable_resource_count\n           course_level\n           step_towards\n           rating\n           price\n           what_will_you_learn\n           course_category\n           course_type\n           course_mode\n           learner_count\n           coursepartner_details{\n              name\n              image\n           }\n           takeway_details{\n              text\n              description\n              media{\n              image\n              }\n              what_will_you_learn\n              }\n           published_by\n           published_on\n           updated_at\n           created_at\n    }\n    }\n\n      }\n  `;\n\nexport const get_all_course_by_usergroup = gql`\n  query get_all_course_by_usergroup($group_id: String!,$pagenumber: Int!,$sort_type:String!){\n    get_all_course_by_usergroup(group_id: $group_id,pagenumber: $pagenumber,sort_type: $sort_type){\n    success\n    error_msg\n    total_count\n    message{\n    course_id\n    course_description\n    course_name\n    enrollment_status\n    created_at\n    updated_at\n    version\n    location\n    course_start_datetime\n    course_end_datetime\n    advertised_start\n    course_img_url\n    social_sharing_url\n    certificate_display_behaviour\n    certificates_show_before_end\n    certificate_html_view_enabled\n    has_any_active_web_certificate\n    certificate_name\n    lowest_passing_grade\n    mobile_available\n    visible_to_staff_only\n    pre_requisite{\n      name\n      image\n  }\n    enrollment_start\n    enrollment_end\n    invitation_only\n    max_student_enrollments_allowed\n    announcement\n    catalog_visibility\n    course_video_url\n    short_description\n    self_paced\n    marketing_url\n    course_language\n    certificate_available_date\n    article_count\n    downloadable_resource_count\n    course_level\n    step_towards\n    rating\n    price\n    what_will_you_learn\n    course_category\n    course_type\n    course_content_details{\n    name\n    type\n    is_active\n    parent_id\n    description\n    sub_section_id\n    file_content{\n    video_url\n    image_url\n    audio_url\n    file_url\n    }\n    unit{\n    name\n    type\n    is_active\n    parent_id\n    description\n    sub_section_id\n    file_content{\n    video_url\n    image_url\n    audio_url\n    file_url\n    }\n    }\n    }\n    author_details{\n    author_name\n    description\n    image\n    }\n    }\n    }\n    }`;\n\n\n","module.exports = \"<h2 mat-dialog-title class=\\\"msg\\\">{{data.title}}</h2>\\n\\n<mat-dialog-content *ngIf=\\\"data.msg\\\">\\n\\n    <p class=\\\"msg\\\"> {{data.msg}} </p>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions *ngIf=\\\"data.type=='showClose'\\\">\\n    <button mat-stroked-button class=\\\"border-light-grey color_black background-darkGrey\\\" (click)=\\\"close()\\\"\\n        cdkFocusInitial>OK</button>\\n</mat-dialog-actions>\\n\\n<mat-dialog-actions *ngIf=\\\"data.type=='confirmAlert'\\\">\\n    <button mat-stroked-button [mat-dialog-close]=\\\"true\\\" class=\\\"border-light-grey color_black background-darkGrey\\\"\\n        cdkFocusInitial>\\n        {{data.confirmText ?data.confirmText :  'Yes'}}</button>\\n    <button mat-flat-button [mat-dialog-close]=\\\"false\\\" class=\\\"background-maroon\\\">\\n        {{data.cancelText ?data.cancelText :  'No'}}</button>\\n</mat-dialog-actions>\"","module.exports = \"p {\\n  text-align: center; }\\n\\n.mat-dialog-container {\\n  display: block;\\n  border: 0.5px solid #024d87;\\n  padding: 30px;\\n  box-sizing: border-box;\\n  overflow: auto;\\n  outline: 0;\\n  width: 100%;\\n  height: 100%;\\n  min-height: inherit;\\n  max-height: inherit; }\\n\\n.mat-button,\\n.mat-stroked-button,\\n.mat-flat-button {\\n  min-width: 38%;\\n  margin: auto;\\n  border-radius: 0 !important; }\\n\\n.background-darkGrey {\\n  background-color: #C02222 !important;\\n  color: #ffffff !important; }\\n\\n@media screen and (max-width: 600px) {\\n  p {\\n    font-size: 8px; }\\n  h2 {\\n    font-size: 12px;\\n    font-weight: bolder; }\\n  .mat-dialog-container {\\n    width: auto; } }\\n\\n.msg {\\n  text-transform: lowercase !important; }\\n\\n.msg:first-letter {\\n  text-transform: capitalize !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2F2aW5hc2gvRG9jdW1lbnRzL2NpbnRhbmEvbHhwIHByb2plY3QvV2ViJTIwUG9ydGFsL3NyYy9hcHAvY29yZS9zaGFyZWQvYWxlcnQtY29tcG9uZW50L2FsZXJ0LWNvbXBvbmVudC5jb21wb25lbnQuc2NzcyIsIi9ob21lL2F2aW5hc2gvRG9jdW1lbnRzL2NpbnRhbmEvbHhwIHByb2plY3QvV2ViJTIwUG9ydGFsL3NyYy9hc3NldHMvdmFyaWFibGUuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGtCQUFrQixFQUFBOztBQUd0QjtFQUNJLGNBQWM7RUFDZCwyQkNOZ0I7RURPaEIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixjQUFjO0VBQ2QsVUFBVTtFQUNWLFdBQVc7RUFDWCxZQUFZO0VBQ1osbUJBQW1CO0VBQ25CLG1CQUFtQixFQUFBOztBQUd2Qjs7O0VBR0ksY0FBYztFQUNkLFlBQVk7RUFDWiwyQkFBMkIsRUFBQTs7QUFLL0I7RUFDSSxvQ0FBNkM7RUFDN0MseUJBQThCLEVBQUE7O0FBR2xDO0VBRUk7SUFDSSxjQUFjLEVBQUE7RUFHbEI7SUFDSSxlQUFlO0lBQ2YsbUJBQW1CLEVBQUE7RUFJdkI7SUFDSSxXQUFXLEVBQUEsRUFDZDs7QUFJTDtFQUNJLG9DQUFvQyxFQUFBOztBQUV4QztFQUNJLHFDQUFxQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvY29yZS9zaGFyZWQvYWxlcnQtY29tcG9uZW50L2FsZXJ0LWNvbXBvbmVudC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCJ2YXJpYWJsZVwiO1xuXG5wIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5tYXQtZGlhbG9nLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYm9yZGVyOiAwLjVweCBzb2xpZCAkY29sb3ItYmx1ZTtcbiAgICBwYWRkaW5nOiAzMHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgb3ZlcmZsb3c6IGF1dG87XG4gICAgb3V0bGluZTogMDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWluLWhlaWdodDogaW5oZXJpdDtcbiAgICBtYXgtaGVpZ2h0OiBpbmhlcml0O1xufVxuXG4ubWF0LWJ1dHRvbixcbi5tYXQtc3Ryb2tlZC1idXR0b24sXG4ubWF0LWZsYXQtYnV0dG9uIHtcbiAgICBtaW4td2lkdGg6IDM4JTtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1ibHVlICFpbXBvcnRhbnQ7XG4gICAgLy9ib3RoIGNvbmZpcm0gYW5kIGNhbmNlbCBidXR0b24gc2FtZSBjbHIgc28gbm8gZGlmZmVyZW50aWF0ZVxufVxuXG4uYmFja2dyb3VuZC1kYXJrR3JleSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGx4cC10aGVtZS1ncmVlbiAhaW1wb3J0YW50Oy8vIFxuICAgIGNvbG9yOiAkY29sb3Itd2hpdGUgIWltcG9ydGFudDtcbn1cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcblxuICAgIHAge1xuICAgICAgICBmb250LXNpemU6IDhweDtcbiAgICB9XG5cbiAgICBoMiB7XG4gICAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcblxuICAgIH1cblxuICAgIC5tYXQtZGlhbG9nLWNvbnRhaW5lciB7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgIH1cblxufVxuXG4ubXNnIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbG93ZXJjYXNlICFpbXBvcnRhbnQ7XG59XG4ubXNnOmZpcnN0LWxldHRlciB7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemUgIWltcG9ydGFudDtcbn0iLCIkY29sb3ItcmVkOiAjRkYwMDAwO1xuJGNvbG9yLWdyZWVuOiAjMDBGRjAwO1xuJGNvbG9yLWJsdWU6ICMwMjRkODc7XG4kY29sb3IteWVsbG93OiAjZWVjNzIwO1xuJGNvbG9yLWxpZ2h0LXllbGxvdyA6IHllbGxvdztcbiRjb2xvci1tYXJvb24gOiAjZGIzMTM3O1xuJGNvbG9yLWRhcmtHcmV5IDogIzVlNWU1ZTtcbiRjb2xvci1pY29uIDogI2VkOTg5YjtcbiRjb2xvci13aGl0ZSA6ICNmZmZmZmY7XG4kY29sb3ItbGlnaHQtYmx1ZSA6ICNCOEQwRkY7XG4kY29sb3ItbGlnaHQtcGluayA6ICNlYzgxODU7XG4kY29sb3ItbGlnaHQtZ3JlZW46ICMwMGQyYjk7XG4kY29sb3ItYmxhbms6IzFGMUExNztcbiRjb2xvci1zbWFsbC1ibHVlOiAjOTRiNWYxO1xuJGNvbG9yLWJvcmRlciA6ICNjY2M7XG4kY29sb3Itb3JhbmdlIDogI0VCOTYwNTtcbiRjb2xvci1zdWJoZWFkIDogIzQ0NmJkNGQxO1xuJGNvbG9yLWxpZ2h0LWdyZXkgOiAjYjNiM2FhNDc7XG4kY29sb3ItZmllbGQgOiAjZTNlY2ZmO1xuJGNvbG9yLWRhcmstZ3JlZW4gOiAjMDRkMDA0O1xuJGxpZ2h0LWdyZWVuIDogIzdjZmMwMGQ0O1xuJGljb24tY29sb3IgOiAjMDAwMDAwNTc7XG4kYm94LXNoYWRvdyA6ICM4MDgwODA2MTtcbiR0cmVuZDojNjdkNGIxO1xuJGNvbG9yLWxpZ2h0ZXN0LWdyZXk6I2Y1ZjVmNTcwO1xuJG5ld1JlZ2lzdGVyaWNvbjogIzIwM2JiZWE4O1xuJG5ld0xlYXJuZXIgOiAjMjAzYmJlNDA7XG4kYWN0aXZlbGVhcm5lcmNoYXJ0IDogIzdmZTdhNTtcbiRpbmFjdGl2ZWxlYXJuZXJjaGFydCA6ICNlYTZjODk7XG4kc3R1ZGVudENoYXJ0IDogIzgwODBmODtcbiRwcm9mZXNzaW9uYWxDaGFydCA6ICNlYTdjMzc7XG4kY29sb3ItbGFuZGluZy1ibHVlOiMxMDY4QjI7XG5cbi8vIEFkbWluIGRhc2hib2FyZCBjb2xvciBcbiRiZy1ncmVlbjogIzdjZmMwMDYxO1xuJGJnLWJyb3duOiAjZmZjMTA3NTk7XG4kYmctY29sb3I6ICNlM2UzZmU7XG4kYmctZGFyay1icm93biA6ICNhZjQ4MTE2MTtcbiRsaWdodC1ncmV5IDogI2Y2ZjZmNjtcbiRsaWdodC15ZWxsb3c6I2ZhZjVjYjtcblxuXG5cbi8vU2FyYXQgXG5cbiRicmVhZC1jcnVtYi1iZyAgOiAjZTVlM2UzO1xuLy8gJGxhYmVsIDogIzMzMzMzMzk2O1xuJHByb2ZpbGUtcC1ncmV5IDogI2NlY2VjZTtcbiRwcm9maWxlLXMtZ3JleSA6ICNkZmRmZGY7XG4kcHJvZmlsZS10LWdyZXkgOiAjZWFlYWVhO1xuJGxhYmVsMjojMzMzMzMzO1xuJGxpbmVDb2xvcjojY2NjY2NjYjA7XG4kYnVsZTI6IzQ0NmJkNGQxO1xuXG4vLyBNYW5qdVxuXG4vLyBNYWluIENvbG9yIFxuJGx4cC1ncmF5OiM4OTg5ODk7XG4kbHhwLXRoZW1lLWdyZWVuOiAjQzAyMjIyO1xuJGx4cC10aGVtZS15ZWxsb3ctc2VjOiNGRkNDMDA7XG4kbHhwLWRhcmstZ3JheTojNzE2ZDZkO1xuLy8gU2VjIGNvbG9yXG4kbHhwLXRleHQ6IzlFOUU5RTtcbiRseHAtZm9vdGVyLXRleHQ6IzNmNDQ0YTtcbiRseHAtaWNvbjogIzVjNjg3MztcbiRseHAtc3RhdHVzLXllbGxvdzojZmZjMTA3YmY7XG4kbHhwLWJ1dHRvbi10ZXh0OiM2OTcyN2M7XG4kbGFiZWw6ICM1YzY4NzM7XG4kbHhwLWxpZ2h0LWdyZXk6I2I1YWNhYztcbi8vICNmZmNjMDA7XG5cbiJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\n\n@Component({\n  selector: 'app-alert-component',\n  templateUrl: './alert-component.component.html',\n  styleUrls: ['./alert-component.component.scss']\n})\nexport class AlertComponentComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<AlertComponentComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any ) {\n  }\n\n  ngOnInit() {\n  }\n\n  close() {\n    this.dialogRef.close(true);\n  }\n}\n","import { NgModule, isDevMode } from '@angular/core';\nimport { HttpClientModule, HttpHeaders, HttpClient } from '@angular/common/http';\nimport { ApolloModule, Apollo, APOLLO_OPTIONS } from 'apollo-angular';\nimport { ApolloLink } from 'apollo-link';\nimport { HttpLinkModule, HttpLink } from 'apollo-angular-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { DefaultOptions } from 'apollo-client';\nimport { CommonServicesService } from '@core/services/common-services.service'\n// import { environment } from '../../environments/environment';\n\nimport { environment } from '@env/environment';\nimport { GlobalServiceService } from '@core/services/handlers/global-service.service';\nimport { onError } from 'apollo-link-error';\n\nconst defaultOptions: DefaultOptions = {\n  watchQuery: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'ignore',\n  },\n  query: {\n    fetchPolicy: 'no-cache',\n    errorPolicy: 'all',\n  },\n};\n\n@NgModule({\n  exports: [\n    HttpClientModule,\n    ApolloModule,\n    HttpLinkModule\n  ]\n})\n\nexport class GraphqlModule {\n  envWcaApi: any = environment.wcaapiurl;\n  envApi: any = environment.apiUrl;\n  envApiImg: any = environment.apiUrlImg;\n  envCourseApi: any = environment.createCourseApi;\n  constructor(apollo: Apollo, httpLink: HttpLink, private gs: GlobalServiceService, private httpC: HttpClient, \n    private services : CommonServicesService) {\n    const http = httpLink.create({ uri: this.envApi + 'graphql' });\n    const middleware = new ApolloLink((operation, forward) => {\n\n      // Check for token\n      const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n      // const token = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjoibHhwYWRtaW4iLCJyb2xlIjoiYWRtaW4iLCJ1c2VyX2lkIjoiMTIzNGFiIiwic2VjX2tleSI6IjEyM0FhIUAjIiwiaWF0IjoxNTk4NDUwMjk3LCJleHAiOjE1OTg0NzE4OTcsImlzcyI6Imh0dHBzOi8vd3d3LmxhcnNlbnRvdWJyby5jb20vIn0.y9YcBFZc43QtAP2Wep7rSI1wHtIMkTBeseAb-n0qvpc'\n      if (!token) { return forward(operation); }\n\n      operation.setContext({\n        headers: new HttpHeaders().set(\n          'Authorization',\n          token,\n        ),\n      });\n      return forward(operation);\n    });\n\n    const Errlink = onError(({ graphQLErrors, networkError, response, operation }) => {\n      // console.log(operation);\n      if (graphQLErrors) {\n        graphQLErrors.forEach(({ message, locations, path }) => {\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n          );\n          if (message.includes('TokenExpiredError') || message.includes('JsonWebTokenError')) {\n            console.log('inside');\n            localStorage.clear();\n            sessionStorage.clear();\n            this.services.getIpAddressByUrl();\n            this.gs.checkLogout();\n          }\n        }\n        );\n      }\n      if (networkError) { console.log(`[Network error]: ${networkError}`); }\n    });\n\n    const link = middleware.concat(http);\n\n    apollo.create({\n      link: Errlink.concat(link),\n      cache: new InMemoryCache({\n        addTypename: false\n      }),\n      defaultOptions,\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { Apollo } from 'apollo-angular';\nimport {\n  login,\n  get_course_by_user,\n  get_country_details,\n  get_qualification_details,\n  get_trending_course,\n  get_board_university_details,\n  get_discipline_details,\n  get_specification_details,\n  get_popular_course,\n  get_institute_details,\n  get_language_details,\n  get_user_detail,\n  list_content,\n  syllabus_of_particular_scorm,\n  getmoduleData,\n  get_user_detail_username,\n  check_existing_user,\n  get_all_category,\n  getPopularcourse,\n  get_sub_category,\n  get_course_by_subcategory,\n  get_module_topic,\n  getsupersubcategory,\n  getLevelCategoryData,\n  getDetailsCount,\n  getlearnertrack,\n  getLearnerenrolledCourses,\n  getlearnerdashboarddetails,\n  getFeedbackQuestion,\n  getCoursePlayerStatusForCourse,\n  getAssignmentmoduleData,\n  playerModuleAndTopic,\n  ViewSingleTopicDiscussionData,\n  ViewAllThreadData,\n  // get_read_learner_activity,\n  getReadLeanerActivity,\n  get_organization_by_id,\n  getCountForCategories,\n  getCoureBasedOnCatalog,\n  getcalenderactivity,\n  singleBatchInfo,\n  ViewAllThreadDataBid,\n  getCountForJobroleCategories,\n  getLoginUserDetail,\n  getprojectActivityData,\n  getperformActivityData\n} from './operations/learner_query';\n\nimport {\n  user_registration,\n  user_registration_mobile_otp_send,\n  user_registration_mobile_otp_verify,\n  get_forgot_username_mobile_email,\n  get_forgot_password_byusername,\n  user_registration_username_suggestion,\n  view_profile,\n  get_state_details,\n  user_registration_done,\n  get_forgot_password_byresetpassword,\n  get_district_details,\n  get_change_password_updateprofile,\n  update_mobile_onprofile,\n  getLevelSubCategoryData,\n  update_verifyotp_mobile_onprofile,\n  update_email_onprofile,\n  update_profile,\n  resend_otp_onprofile,\n  delete_qualification,\n  gettopicdetail,\n  getCourseCategorySearch,\n  view_profile1,\n  createGuidanceRequest,\n  InsertCourseFeedback,\n  playerstatusrealtime,\n  CreateNewThread,\n  CreateNewThreadBid,\n  claimcourse,\n  user_mstr_data,\n  add_topic_reference,\n  save_attendies,\n  bulkclaimcourse,\n  markAsRead\n} from './operations/learner_mutation';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\nimport { from } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LearnerServicesService {\n  envWcaApi: any = environment.wcaapiurl;\n  envApi: any = environment.apiUrl;\n  envApiImg: any = environment.apiUrlImg;\n  envCourseApi: any = environment.createCourseApi;\n  envDomain: any = environment.domain;\n\n  constructor(private Apollo: Apollo, private http: HttpClient) { }\n\n  public getData(userid, date) {\n    return this.Apollo.query({\n      query: getReadLeanerActivity,\n      variables: {\n        userid,\n        date\n      }\n    });\n  }\n  login(username, password, is_admin) {\n    return this.Apollo.query({\n      query: login,\n      variables: {\n        username,\n        password,\n        is_admin\n      }\n    });\n  }\n\n  imageupload(fb) {\n    return this.http.post<any[]>(this.envApiImg + `upload/image`, fb);\n  }\n\n  postcomment(data) {\n    const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({ Authorization: token })\n    };\n    return this.http.post(this.envApi + 'postcomment', data, httpOptions);\n  }\n\n  unlikepost(data) {\n    const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({ Authorization: token })\n    };\n    return this.http.post(this.envApi + 'post_unlike', data, httpOptions);\n  }\n  likepost(data) {\n    const token = localStorage.getItem('token') || sessionStorage.getItem('token');\n    const httpOptions = {\n      headers: new HttpHeaders({ Authorization: token })\n    };\n    return this.http.post(this.envApi + 'post_like', data, httpOptions);\n  }\n\n  user_registration(email, full_name, mobile_number, title_id, termsandconditions) {\n    return this.Apollo.query({\n      query: user_registration,\n      variables: {\n        full_name,\n        mobile_number,\n        title_id,\n        email,\n        term_condition: termsandconditions,\n        domain: this.envDomain\n      }\n    });\n  }\n\n  submit_otp(user_id, _id, mobile, email) {\n    return this.Apollo.query({\n      query: user_registration_mobile_otp_send,\n      variables: {\n        user_id,\n        user: _id,\n        mobile_number: mobile,\n        email\n      }\n    });\n  }\n\n  user_registration_verify(otp, mobile_number) {\n    return this.Apollo.query({\n      query: user_registration_mobile_otp_verify,\n      variables: {\n        otp,\n        mobile_number\n      }\n    });\n  }\n\n  user_registration_done(user_id, username, password, created_by_ip) {\n    return this.Apollo.query({\n      query: user_registration_done,\n      variables: {\n        user_id,\n        username,\n        password,\n        created_by_ip\n      }\n    });\n  }\n  view_profile(user_id) {\n    return this.Apollo.query({\n      query: view_profile,\n      variables: {\n        user_id\n      }\n    });\n  }\n  get_country_details() {\n    return this.Apollo.query({\n      query: get_country_details\n    });\n  }\n  get_state_details(_id) {\n    return this.Apollo.query({\n      query: get_state_details,\n      variables: {\n        _id\n      }\n    });\n  }\n  getMyCourse(user_id) {\n    return this.Apollo.query({\n      query: get_course_by_user,\n      variables: {\n        user_id\n      }\n    });\n  }\n  // submit_otp(user_id,_id,mobile) {\n  //   return this.Apollo.query({\n  //     query: user_registration_mobile_otp_send,\n  //     variables: {\n  //       mobile_number:mobile,\n  //       user_id:user_id,\n  //       user:_id,\n\n  userNamesuggestion(userId) {\n    return this.Apollo.query({\n      query: user_registration_username_suggestion,\n      variables: {\n        user_id: userId\n      }\n    });\n  }\n\n  // checks for existing user or not\n  check_existing_user(name) {\n    return this.Apollo.query({\n      query: check_existing_user,\n      variables: {\n        username: name\n      }\n    });\n  }\n\n  forgotUsernameandPassword(type, subtype, mobile_number, email) {\n    return this.Apollo.query({\n      query: get_forgot_username_mobile_email,\n      variables: {\n        type,\n        subtype,\n        mobile_number,\n        email,\n        domain: this.envDomain\n      }\n    });\n  }\n  forgotPasswordByUsername(username) {\n    return this.Apollo.query({\n      query: get_forgot_password_byusername,\n      variables: {\n        username\n      }\n    });\n  }\n  resetPassword(username, password) {\n    return this.Apollo.query({\n      query: get_forgot_password_byresetpassword,\n      variables: {\n        username,\n        password\n      }\n    });\n  }\n  get_qualification_details() {\n    return this.Apollo.query({\n      query: get_qualification_details\n    });\n  }\n  get_board_university_details(id) {\n    return this.Apollo.query({\n      query: get_board_university_details,\n      variables: {\n        _id: id\n      }\n    });\n  }\n\n  get_district_details(country, state) {\n    return this.Apollo.query({\n      query: get_district_details,\n      variables: {\n        country,\n        state\n      }\n    });\n  }\n\n  get_change_password_updateprofile(username, old_password, password) {\n    return this.Apollo.query({\n      query: get_change_password_updateprofile,\n      variables: {\n        username,\n        old_password,\n        password\n      }\n    });\n  }\n  get_discipline_details(id) {\n    return this.Apollo.query({\n      query: get_discipline_details,\n      variables: {\n        _id: id\n      }\n    });\n  }\n  get_specification_details() {\n    return this.Apollo.query({\n      query: get_specification_details\n    });\n  }\n  get_institute_details() {\n    return this.Apollo.query({\n      query: get_institute_details\n    });\n  }\n  get_language_details() {\n    return this.Apollo.query({\n      query: get_language_details\n    });\n  }\n\n  update_mobile_onprofile(user_id, mobile_number) {\n    return this.Apollo.query({\n      query: update_mobile_onprofile,\n      variables: {\n        user_id,\n        mobile_number\n      }\n    });\n  }\n\n  update_verifyotp_mobile_onprofile(user_id, mobile_number, otp) {\n    return this.Apollo.query({\n      query: update_verifyotp_mobile_onprofile,\n      variables: {\n        user_id,\n        mobile_number,\n        otp\n      }\n    });\n  }\n  get_user_detail(email) {\n    return this.Apollo.query({\n      query: get_user_detail,\n      variables: {\n        email\n      }\n    });\n  }\n  getLoginUserDetail(email) {\n    return this.Apollo.query({\n      query: getLoginUserDetail,\n      variables: {\n        username : email\n      }\n    });\n  }\n\n  get_user_detail_username(username) {\n    return this.Apollo.query({\n      query: get_user_detail_username,\n      variables: {\n        username\n      }\n    });\n  }\n\n  update_email_onprofile(user_id, email) {\n    return this.Apollo.query({\n      query: update_email_onprofile,\n      variables: {\n        user_id,\n        email,\n        domain: this.envDomain\n      }\n    });\n  }\n  list_content() {\n    return this.Apollo.query({\n      query: list_content,\n      variables: {}\n    });\n  }\n  syllabus_of_particular_scorm(contentid, user_id, course_id) {\n    return this.Apollo.query({\n      query: syllabus_of_particular_scorm,\n      variables: {\n        contentid,\n        user_id,\n        course_id\n      }\n    });\n  }\n  getModuleData(course_id, userid) {\n    return this.Apollo.query({\n      query: getmoduleData,\n      variables: {\n        courseid: course_id,\n        user_id: userid\n      }\n    });\n  }\n\n  update_profile(userData) {\n    return this.Apollo.query({\n      query: update_profile,\n      variables: userData\n    });\n  }\n\n  delete_qualification(qualificationData) {\n    return this.Apollo.query({\n      query: delete_qualification,\n      variables: qualificationData\n    });\n  }\n\n  resend_otp_onprofile(user_id) {\n    return this.Apollo.query({\n      query: resend_otp_onprofile,\n      variables: {\n        user_id\n      }\n    });\n  }\n\n  getcoursecategory(groupid: any) {\n    return this.Apollo.query({\n      query: get_all_category,\n      variables: {\n        group_id: groupid\n      }\n    });\n  }\n\n  getcoursesubcategory(categoryid) {\n    return this.Apollo.query({\n      query: get_sub_category,\n      variables: {\n        category_id: categoryid\n      }\n    });\n  }\n  getsupersubcategory(subcategoryid) {\n    return this.Apollo.query({\n      query: getsupersubcategory,\n      variables: {\n        sub_category_id: subcategoryid\n      }\n    });\n  }\n\n  getcourse(subcategory) {\n    return this.Apollo.query({\n      query: get_course_by_subcategory,\n      variables: {\n        input_id: subcategory._id,\n        input_type: subcategory.type,\n        pagenumber: subcategory.pagenumber\n      }\n    });\n  }\n\n  // getallcourses(groupid, pagenumber,sort_type) {\n  //   return this.Apollo.query({\n  //     query: get_all_course_by_usergroup,\n  //     variables: {\n  //       group_id: groupid,\n  //       pagenumber: pagenumber,\n  //       sort_type:sort_type\n  //     }\n  //   });\n  // }\n  get_module_topic(course_id) {\n    return this.Apollo.query({\n      query: get_module_topic,\n      variables: {\n        course_id\n      }\n    });\n  }\n  gettopicdetail(_id, modulename) {\n    return this.Apollo.query({\n      query: gettopicdetail,\n      variables: {\n        _id,\n        module_name: modulename\n      }\n    });\n  }\n  // Getting all 3 level Category data\n  getLevelCategoryData() {\n    return this.Apollo.query({\n      query: getLevelCategoryData\n    });\n  }\n  // After selection category in category level filter\n  getLevelSubCategoryData(level1: any, level2: any, level3: any) {\n    return this.Apollo.query({\n      query: getLevelSubCategoryData,\n      variables: {\n        level1,\n        level2,\n        level3\n      }\n    });\n  }\n\n  // Get guideline search for geeting all filter values\n  getGuidelineSearch() {\n    return this.Apollo.query({\n      query: getDetailsCount\n    });\n  }\n\n  postCategoryFilter(data) {\n    return this.http.post<any[]>(this.envApi + `getsublevelcategories`, data);\n  }\n\n  // Guildeline selected filter value and getting courses\n  postGuildelineSearchData(\n    category: any,\n    sub_category: any,\n    super_sub_category: any,\n    course_language: any,\n    course_mode: any,\n    author_details: any,\n    partner_details: any,\n    pagenumber,\n    perPage,\n    publishedToDate,\n    publishedFromDate,\n    catalogue_visibility\n  ) {\n    return this.Apollo.query({\n      query: getCourseCategorySearch,\n      variables: {\n        category,\n        sub_category,\n        super_sub_category,\n        course_language,\n        course_mode,\n        author_details,\n        partner_details,\n\n        pagenumber,\n        perPage,\n        publishedFromDate,\n        publishedToDate,\n        catalogue_visibility\n      }\n    });\n  }\n\n  getlearnertrack(level1: any, level2: any) {\n    return this.Apollo.query({\n      query: getlearnertrack,\n      variables: {\n        user_id: level1,\n        _id: level2\n      }\n    });\n  }\n  view_profile1(user_id) {\n    return this.Apollo.query({\n      query: view_profile1,\n      variables: {\n        user_id\n      }\n    });\n  }\n  get_enrolled_courses(user_id, id, catalogue_id, category_id, jobRoleCategoryId, searchString) {\n    return this.Apollo.query({\n      query: getLearnerenrolledCourses,\n      variables: {\n        user_id,\n        user_obj_id: id,\n        catalogue_id,\n        category_id,\n        jobRoleCategoryId,\n        searchString\n      }\n    });\n  }\n  bulkclaimcourse( id, user_id, category_id, categoryName) {\n    return this.Apollo.query({\n      query: bulkclaimcourse,\n      variables: {\n        id,\n        user_id,\n        category_id,\n        categoryName\n      }\n    });\n  }\n\n  getCountForCategories(userObjId) {\n    return this.Apollo.query({\n      query: getCountForCategories,\n      variables: {\n        userObjId\n      }\n    });\n  }\n  getCoureBasedOnCatalog(catalogue_id, category_id, userObjId, subCategoryId, superSubCategoryId) {\n    return this.Apollo.query({\n      query: getCoureBasedOnCatalog,\n      variables: {\n        catalogue_id,\n        category_id,\n        userObjId,\n        subCategoryId,\n        superSubCategoryId\n      }\n    });\n  }\n\n\n\n  get_learner_dashboard(user_id) {\n    return this.Apollo.query({\n      query: getlearnerdashboarddetails,\n      variables: {\n        user_id\n      }\n    });\n  }\n\n  createGuidanceRequestLanding(name, emailid, courseid, createdbyip) {\n    return this.Apollo.query({\n      query: createGuidanceRequest,\n      variables: {\n        name,\n        email_id: emailid,\n        created_by_ip: createdbyip,\n        course_id: courseid\n      }\n    });\n  }\n\n  getPopularInLanding() {\n    return this.Apollo.query({\n      query: get_popular_course\n    });\n  }\n\n  getTrendingInLanding() {\n    return this.Apollo.query({\n      query: get_trending_course\n    });\n  }\n  getPopularcourse() {\n    return this.Apollo.query({\n      query: getPopularcourse\n    });\n  }\n  getFeedbackQuestion() {\n    return this.Apollo.query({\n      query: getFeedbackQuestion\n    });\n  }\n  InsertCourseFeedback(feedback) {\n    return this.Apollo.query({\n      query: InsertCourseFeedback,\n      variables: feedback\n    });\n  }\n  getCoursePlayerStatusForCourse(user_id, course_id) {\n    return this.Apollo.query({\n      query: getCoursePlayerStatusForCourse,\n      variables: {\n        user_id,\n        course_id\n      }\n    });\n  }\n\n  getAssignmentmoduleData(courseid, user_id) {\n    return this.Apollo.query({\n      query: getAssignmentmoduleData,\n      variables: {\n        courseid,\n        user_id\n      }\n    });\n  }\n\n  playerModuleAndTopic(contentID, user_id) {\n    return this.Apollo.query({\n      query: playerModuleAndTopic,\n      variables: {\n        contentID,\n        user_id\n      }\n    });\n  }\n\n  playerstatusrealtime(user_id, contentID, module: any, percentage) {\n    return this.Apollo.query({\n      query: playerstatusrealtime,\n      variables: {\n        user_id,\n        contentID,\n        module,\n        percentage\n      }\n    });\n  }\n\n  viewsingletopicdiscussion(topic_slug, uid) {\n    return this.Apollo.query({\n      query: ViewSingleTopicDiscussionData,\n      variables: {\n        topic_slug,\n        uid\n      }\n    });\n  }\n\n  ViewAllThreadData(modId, cid, bid?) {\n    if (bid) {\n      return this.Apollo.query({\n        query: ViewAllThreadDataBid,\n        variables: {\n          module_name: modId,\n          course_id: cid,\n          batch_id: bid\n        }\n      });\n    } else {\n      return this.Apollo.query({\n        query: ViewAllThreadData,\n        variables: {\n          module_name: modId,\n          course_id: cid,\n        }\n      });\n    }\n  }\n\n  createNewThread(uid, course_id, module_name, title, content, course_name, batch?) {\n    if (batch) {\n      return this.Apollo.query({\n        query: CreateNewThreadBid,\n        variables: {\n          uid, course_id, module_name, title, content, course_name, batch_name: batch.batch_name, batch_id: batch.batch_id\n        }\n      });\n    } else {\n      return this.Apollo.query({\n        query: CreateNewThread,\n        variables: {\n          uid, course_id, module_name, title, content, course_name\n        }\n      });\n    }\n  }\n\n  getReadLeanerActivity(userid, date) {\n    return this.Apollo.query({\n      query: getReadLeanerActivity,\n      variables: {\n        userid,\n        date\n      }\n    });\n  }\n\n  getAllActivity(userid, date) {\n    return this.Apollo.query({\n      query: getcalenderactivity,\n      variables: {\n        userid,\n        date\n      }\n    });\n  }\n\n  get_organization_by_id(organization_id) {\n    return this.Apollo.query({\n      query: get_organization_by_id,\n      variables: {\n        organization_id\n      }\n    });\n  }\n\n  claimcourse(id, user_id, course_id, courseName, categoryName) {\n    return this.Apollo.query({\n      query: claimcourse,\n      variables: {\n        id,\n        user_id,\n        course_id,\n        courseName,\n        categoryName\n      }\n    });\n  }\n\n  getSingleBatchInfo(uid, cid) {\n    return this.Apollo.query({\n      query: singleBatchInfo,\n      variables: {\n        user_id: uid,\n        course_id: cid\n      }\n    });\n  }\n\n  getRegisterTitle() {\n    return this.Apollo.query({\n      query: user_mstr_data,\n      variables: {}\n    });\n  }\n\n  add_topic_reference(user_id, batch_id, course_id, module_id, topic_id, reference_id, reference_status, created_by) {\n    return this.Apollo.query({\n      query: add_topic_reference,\n      variables: {\n        user_id,\n        batch_id,\n        course_id,\n        module_id,\n        topic_id,\n        reference_id,\n        reference_status,\n        created_by\n      }\n    });\n  }\n  saveAttendees() {\n    return this.Apollo.query({\n      query: save_attendies,\n      variables: {\n        userid: 'fsdfsdfsd',\n        activityid: '432142314',\n        activitynamne: 'test',\n        username: 'testing',\n        mobile: '9876543234',\n        email: 'test@gmail.com',\n        status: 'true'\n      }\n    });\n  }\n\n  getCountForJobroleCategories(userObjId) {\n    return this.Apollo.query({\n      query: getCountForJobroleCategories,\n      variables: {\n        userObjId\n      }\n    });\n  }\n  markAsRead(notifications: any) {\n    return this.Apollo.query({\n      query: markAsRead,\n      variables: {\n        notifications\n      }\n    });\n  }\n\ngetprojectActivityData(userId, courseId) {\n  return this.Apollo.query({\n    query: getprojectActivityData,\n    variables: {\n      userId,\n      courseId\n    }\n  });\n}\n// get oerform activity details\n  getperformActivityData(userId , courseId) {\n    return this.Apollo.query({\n      query: getperformActivityData,\n      variables: {\n        userId,\n        courseId\n      }\n    });\n  }\n}\n\n\n","import gql from 'graphql-tag';\n\nexport const user_registration = gql`\n  mutation user_registration($full_name: String!, $mobile_number: String, $title_id: String,\n   $email: String!,$term_condition:Boolean,$domain:String!) {\n    user_registration(\n      full_name: $full_name,\n      mobile_number:$mobile_number,\n      title_id :$title_id ,\n      email: $email,\n      term_condition: $term_condition,\n      domain:$domain\n    ) {\n      message\n      success\n      data {\n      user_id\n      full_name\n      email\n      _id\n      }\n      _id\n      error\n    }\n  }\n`;\n\nexport const user_registration_mobile_otp_send = gql`\n  mutation user_registration_mobile_otp_send($user_id: String,$user: String,$mobile_number: String!,$email: String) {\n    user_registration_mobile_otp_send(\n      user_id:$user_id,\n      user: $user,\n      mobile_number: $mobile_number,\n      email: $email,\n      is_active: true\n    ) {\n      message\n      success\n    }\n  }\n`;\n\nexport const user_registration_mobile_otp_verify = gql`\n  mutation user_registration_mobile_otp_verify($otp:String!,$mobile_number: String!) {\n    user_registration_mobile_otp_verify(\n      otp: $otp,\n      mobile_number:$mobile_number\n\n    ) {\n      message\n      success\n      data{\n        otp\n        _id\n        mobile_number\n        user_id\n        username\n      }\n    }\n  }\n`;\n\nexport const user_registration_done = gql`\n  mutation user_registration_done($user_id: String,$username: String,$password:String!, $created_by_ip: String!) {\n    user_registration_done(\n      user_id:$user_id,\n      username:$username,\n      password:$password,\n      created_by_ip:$created_by_ip\n    ) {\n      success\n      _id\n      message\n      token\n    }\n  }\n`;\n\nexport const get_forgot_username_mobile_email = gql`\n  mutation get_forgot_username_mobile_email($type: String,$subtype:String!, $mobile_number: String,$email: String ,$domain:String!) {\n    get_forgot_username_mobile_email(\n      type:$type,\n      subtype:$subtype,\n      mobile_number:$mobile_number,\n      email:$email,\n      domain:$domain\n    ) {\n      success\n      message\n\n    }\n  }\n`;\n\nexport const get_forgot_password_byusername = gql`\n  mutation get_forgot_password_byusername($username: String) {\n    get_forgot_password_byusername(\n      username:$username,\n    ) {\n      message\n      success\n      user_id\n      data{\n        value\n        type\n      }\n\n    }\n  }\n`;\n\n\nexport const user_registration_username_suggestion = gql`\n  mutation user_registration_username_suggestion($user_id: String) {\n    user_registration_username_suggestion(\n      user_id:$user_id,\n    ) {\n      message\n      success\n      data\n\n    }\n  }\n`;\n\nexport const get_forgot_password_byresetpassword = gql`\n  mutation get_forgot_password_byresetpassword($username: String!,$password:String!) {\n    get_forgot_password_byresetpassword(\n      username:$username,\n      password:$password\n    ) {\n      message\n      success\n    }\n  }\n`;\nexport const view_profile = gql`\n  mutation view_profile($user_id: String) {\n    view_profile(user_id:$user_id)\n    {\n      success\n\n      message {\n\n        full_name\n\n\n\n        email\n\n        user_id\n\n        user_dtl {\n\n          is_admin\n\n          user_id\n\n          username\n\n          password\n\n          created_by_ip\n          created_on\n\n        }\n\n        user_mobile {\n\n          mobile_number\n\n        }\n\n        user_profile {\n\n          _id\n\n          languages_known\n\n          is_student_or_professional\n\n          about_you\n\n          certificate\n\n          user_id\n\n          profile_img\n\n          year_of_birth\n\n          doj_lxp\n\n          progress\n\n          is_active\n\n          gender\n\n          country\n\n          state\n\n          city_town\n\n          student\n\n          professional {\n\n            total_experience\n\n            organization\n\n            job_role\n\n          }\n\n\n\n          social_media {\n\n            link\n\n            img\n\n          }\n\n          last_login\n\n          created_by_ip\n\n          created_by\n\n          created_on\n\n          updated_by_ip\n\n          updated_on\n\n          updated_by\n          qualification {\n\n            qualification\n\n            institute\n\n            board_university\n\n            discipline\n\n            specification\n\n            year_of_passing\n\n            percentage\n\n          }\n\n        }\n\n        country_detail {\n\n          _id\n\n          countryname\n\n          countryshortcode\n\n          is_active\n\n        }\n\n        state_detail {\n\n          _id\n\n          statename\n\n          stateshortcode\n\n          country\n\n          is_active\n\n        }\n\n        district_detail {\n\n          _id\n\n          districtname\n\n          is_active\n\n        }\n\n        qualification {\n\n          board {\n\n            _id\n\n            Board_Id\n\n            Board_Name\n\n            is_active\n\n          }\n\n          discipline {\n\n            _id\n\n            discipline_id\n\n            discipline_name\n\n            discipline_code\n\n            is_active\n\n          }\n\n          institute_detail {\n\n            _id\n\n            institute_id\n\n            institute_name\n\n            institute_code\n\n            is_active\n\n          }\n\n          level_detail {\n\n            _id\n\n            level_id\n\n            level_name\n\n            level_code\n\n            is_active\n\n          }\n\n          specification_detail {\n\n            _id\n\n            specification_id\n\n            specification_name\n\n            specification_code\n\n            is_active\n\n          }\n\n          university {\n\n            _id\n\n            University_Id\n\n            University_Name\n\n            is_active\n\n          }\n\n          year_of_passing\n\n          percentage\n\n\n\n        }\n\n        language_detail {\n\n          _id\n\n          is_active\n\n          languagecode\n\n          languagename\n\n        }\n\n\n\n        progress\n                                }\n\n  }\n}\n`;\n\nexport const get_state_details = gql`\n    mutation   get_state_details($_id: String){\n      get_state_details(\n        _id: $_id\n      ) {\n        message\n    success\n    data{\n      _id\n      statename\n      stateshortcode\n      country\n      created_by\n      created_on\n      created_by_ip\n      updated_on\n      updated_by\n      updated_by_ip\n      is_active\n    }\n      }\n    }\n    `;\n\nexport const get_district_details = gql`\nmutation get_district_details($country: String,$state: String){\n\tget_district_details(\n\tcountry: $country,\n\tstate: $state) {\n\t  message\n    success\n    data{\n       _id\n      districtname\n   \n      created_by\n      created_on\n      created_by_ip\n      updated_on\n      updated_by\n      updated_by_ip\n      is_active\n    }\n}\n}\n`;\nexport const get_change_password_updateprofile = gql`\nmutation get_change_password_updateprofile($username: String, $old_password: String $password: String){\n  get_change_password_updateprofile(\n    username: $username,\n    old_password: $old_password,\n    password: $password\n  ) {\n    message\nsuccess\n  }\n}\n`;\n\nexport const view_profile1 = gql`\n  mutation view_profile($user_id: String) {\n    view_profile(user_id:$user_id) {\n    success\n    message {\n      full_name\n      email\n      user_id\n      user_mobile {\n        mobile_number\n      }\n      user_dtl{\n          username\n          created_on\n      }\n      user_profile {\n        _id\n        languages_known\n        is_student_or_professional\n        about_you\n        certificate\n        user_id\n        profile_img\n        year_of_birth\n        progress\n        is_active\n        gender\n        country\n        state\n        city_town\n        student\n        professional {\n          total_experience\n          organization\n          job_role\n        }\n        qualification{\n          discipline\n          board_university\n          qualification\n          specification\n          qualification\n          year_of_passing\n          percentage\n        }\n      }\n      country_detail {\n        countryname\n      }\n      state_detail {\n        statename\n      }\n      district_detail {\n        districtname\n      }\n     qualification {\n        board {\n          Board_Name\n        }\n        discipline {\n          discipline_name\n        }\n        institute_detail {\n          institute_name\n        }\n        level_detail {\n          level_name\n        }\n        specification_detail {\n          specification_name\n        }\n        university {\n          University_Name\n        }\n      year_of_passing\n      percentage\n      }\n      language_detail {\n        languagename\n      }\n      progress\n    }\n  }\n}\n`;\n\n\n\n\n\nexport const delete_qualification = gql`\n mutation delete_qualification($user_id: String,$qualification: String){\n  delete_qualification(\n    user_id: $user_id,\n    qualification: $qualification\n    ) {\n      success\n      message\n    }\n  }\n`;\n\n\nexport const update_profile = gql`\n  mutation update_profile($user_id: String, $is_student_or_professional: String, $profile_img: String, $year_of_birth: String, $doj_lxp: String,$qualification: [qualification_content],\n    $social_media: [social_media_content], $is_active: Boolean, $progress: String, $gender: String, $languages_known: [String],\n    $country: String, $state: String, $city_town: String, $about_you: String, $certificate: [String], $student: String,\n    $professional: professional_content, $last_login: String, $created_by_ip: String, $created_by: String, $created_on: String,\n    $updated_by_ip: String, $updated_on: String, $updated_by: String,$domain:String!){\n    update_profile(\n      user_id: $user_id,\n      profile_img: $profile_img,\n      year_of_birth: $year_of_birth,\n      doj_lxp: $doj_lxp,\n      qualification: $qualification,\n      social_media: $social_media,\n      is_active: $is_active,\n      progress: $progress,\n      gender: $gender,\n      languages_known: $languages_known,\n      country: $country,\n      state: $state,\n      city_town: $city_town,\n      about_you: $about_you,\n      certificate: $certificate,\n      is_student_or_professional: $is_student_or_professional,\n      student: $student,\n      professional: $professional,\n      last_login: $last_login,\n      created_by_ip: $created_by_ip,\n      created_by: $created_by,\n      created_on: $created_on,\n      updated_by_ip: $updated_by_ip,\n      updated_on: $updated_on,\n      updated_by: $updated_by,\n      domain:$domain\n    ) {\n      success\n      message\n\n    }\n  }\n`;\nexport const update_mobile_onprofile = gql`\nmutation update_mobile_onprofile($user_id: String, $mobile_number: String){\n\tupdate_mobile_onprofile(\n    user_id: $user_id,\n    mobile_number: $mobile_number,\n    ) {\n\t    message\n    success\n}\n}\n`;\nexport const update_verifyotp_mobile_onprofile = gql`\n  mutation  update_verifyotp_mobile_onprofile($user_id: String, $mobile_number: String, $otp: String){\n    update_verifyotp_mobile_onprofile(\n      user_id: $user_id,\n      mobile_number: $mobile_number,\n      otp: $otp\n    ) {\n      success\n      message\n    }\n  }\n`;\nexport const update_email_onprofile = gql`\n  mutation update_email_onprofile($user_id: String, $email: String,$domain:String!){\n    update_email_onprofile(\n      user_id: $user_id,\n      email: $email,\n      domain:$domain\n    ) {\n      message\n      success\n    }\n  }\n`;\nexport const resend_otp_onprofile = gql`\n  mutation resend_otp_onprofile($user_id: String) {\n    resend_otp_onprofile(\n      user_id:$user_id\n    ) {\n      message\n      success\n    }\n  }\n`;\n\nexport const gettopicdetail = gql`\n  mutation gettopicdetail($_id: String,$module_name:String) {\n    gettopicdetail(\n      _id:$_id,module_name:$module_name\n    ) {\n      data{\n        topicname\n      }\n      success\n    }\n\n  }\n`;\n\n\nexport const getLevelSubCategoryData = gql`\n  mutation getLevelSubCategoryData($level1: [String],$level2:[String],$level3:[String]) {\n    getLevelSubCategoryData(level1:$level1,level2:$level2,level3:$level3) {\n      success\n      message,\n    data{\n      level1{\n        _id\n        isSelected\n        category_id\n        category_name\n        category_description\n        level\n      }\n      level2{\n       _id\n        sub_category_id\n        isSelected\n        sub_category_name\n        parent_category_id\n        level\n      }\n      level3{\n        _id\n        parent_category_id\n        parent_sub_category_id\n        isSelected\n        creator_id\n        level\n        super_sub_category_id\n        super_sub_category_name\n      }\n    }\n\n    }\n  }\n`;\n\n\n\n\nexport const getCourseCategorySearch = gql`\n  mutation getCourseCategorySearch($category: [String]!,$sub_category:[String]!, $super_sub_category: [String]!,\n    $course_language: [String],  $course_mode:[String],$author_details:[String],$partner_details:[String],\n    $pagenumber:Int!,$perPage: Int!, $publishedToDate: String, $publishedFromDate: String,\n    $catalogue_visibility: Int ) {\n    getCourseCategorySearch(category:$category,sub_category:$sub_category,super_sub_category:$super_sub_category,\n      course_language:$course_language,course_mode:$course_mode,author_details:$author_details,partner_details:$partner_details,\n      pagenumber:$pagenumber,perPage:$perPage, publishedToDate:$publishedToDate,\n       publishedFromDate:$publishedFromDate, catalogue_visibility: $catalogue_visibility\n      ) {\n        success\n        message\n        data{\n          course_id\n          course_description\n          course_name\n          version\n          location\n          course_start_datetime\n          course_end_datetime\n          advertised_start\n          course_img_url\n          social_sharing_url\n          certificate_display_behaviour\n          certificates_show_before_end\n          certificate_html_view_enabled\n          has_any_active_web_certificate\n          certificate_name\n          lowest_passing_grade\n          mobile_available\n          visible_to_staff_only\n          enrollment_start\n          enrollment_end\n          invitation_only\n          max_student_enrollments_allowed\n          announcement\n          catalog_visibility\n          course_video_url\n          short_description\n          self_paced\n          marketing_url\n          course_language\n          certificate_available_date\n          article_count\n          downloadable_resource_count\n          course_level\n          step_towards\n          rating\n          price\n          what_will_you_learn\n          course_category\n          course_type\n          groupid\n          created_by\n          updated_by\n          admin_id\n          is_published\n          course_mode\n          preview_video\n          learner_count\n          is_active\n          published_by\n          publisher_id\n          updated_by_id\n          user_role\n          user_id\n          user_name\n          published_on\n          updated_at\n          created_at\n          super_sub_category_id\n          pre_requisite\n          takeway_details{\n            text\n            description\n            what_will_you_learn\n            media\n          }\n          coursepartner_details{\n             name\n             image\n          }\n          category_id\n          parent_sub_category_id\n          course_content_details\n          author_details{\n            author_name\n            description\n            image\n          }\n        }\n        languageCount{\n        course_language\n        count\n        }\n        instructor{\n        authordetails\n        count\n        }\n        partner{\n        coursepartnerdetails\n        count\n        }\n        courseMode{\n        course_mode\n        count\n        }\n  }\n  }\n`;\n\nexport const createGuidanceRequest = gql`\n  mutation create_guidance_request($name: String!,$email_id:String!, $created_by_ip : String!, $course_id : String!) {\n    create_guidance_request(\n      name:$name,\n      email_id:$email_id,\n      created_by_ip:$created_by_ip,\n      course_id:$course_id,\n    ) {\n      message\n      success\n      error_msg\n    }\n  }\n`;\nexport const InsertCourseFeedback = gql`\nmutation InsertCourseFeedback($user_id: String!, $question_id: [que_dtl], $question_ans: [question_ans_content],$course_id: String ){\n    InsertCourseFeedback(user_id: $user_id, question_id: $question_id, question_ans: $question_ans, course_id : $course_id ) {\n      success\n      message\n    }\n  }`;\n\nexport const playerstatusrealtime = gql`\nmutation playerstatusrealtime($user_id: String, $contentID:String,$module:[module_type_input],$percentage:String){\n  playerstatusrealtime(user_id: $user_id,contentID:$contentID,module:$module,percentage:$percentage) {\n      success\n      message\n    }\n  }`;\n\nexport const CreateNewThread = gql`\nmutation CreateNewThread($uid: Int!, $course_id: String!, $module_name:String!, $title:String!, $content:String!, $course_name: String!,\n$batch_id: String, $batch_name: String){\n  CreateNewThread(uid: $uid, course_id : $course_id, module_name:$module_name,title:$title,content:$content, course_name:$course_name,\n    batch_id: $batch_id, batch_name:$batch_name ) {\n    success\n    message\n  }\n}`;\n\nexport const CreateNewThreadBid = gql`\nmutation CreateNewThread($uid: Int!, $course_id: String!, $module_name:String!, $title:String!, $content:String!, $course_name: String!,\n$batch_id: String, $batch_name: String){\n  CreateNewThread(uid: $uid, course_id : $course_id, module_name:$module_name,title:$title,content:$content, course_name:$course_name,\n    batch_id: $batch_id, batch_name:$batch_name ) {\n    success\n    message\n  }\n}`;\nexport const claimcourse = gql`\n  mutation claimcourse($id: String, $user_id: String, $course_id: [String], $courseName: String, $categoryName: String) {\n    claimcourse(id: $id, user_id: $user_id, course_id: $course_id, courseName: $courseName, categoryName:$categoryName) {\n      message\n      success\n    }\n  }\n`;\n\nexport const  user_mstr_data = gql`\n  mutation  user_mstr_data {\n    user_mstr_data {\n      success\n        data {\n          _id\n          title\n        }\n    }\n  }\n`;\n\n\n\nexport const add_topic_reference = gql`\nmutation add_topic_reference($user_id: String!, $batch_id: String, $course_id:String!, $module_id:String!, $topic_id:String!, \n$reference_id: String,$ reference_status: Boolean, $created_by: String){\n  add_topic_reference(user_id: $user_id, batch_id : $batch_id, course_id:$course_id,module_id:$module_id,topic_id:$topic_id, reference_id:$reference_id,\n    reference_status: $reference_status, created_by:$created_by ) {\n      success\n      error_msg\n      message{\n          is_active\n          _id\n          user_id\n          batch_id\n          course_id\n          module_id\n          topic_id\n          reference_id\n          reference_status\n          created_by\n          created_on\n          updated_by\n          updated_on\n      }\n  }\n}`;\n\nexport const  save_attendies = gql`\n  mutation  save_attendies(\n    $userid:String,\n    $activityid:String,\n    $activitynamne:String,\n    $username:String,\n    $mobile:String,\n    $email:String,\n    $status:String\n    ) {\n      save_attendies(userid:$userid,\n        activityid:$activityid,\n        activitynamne:$activitynamne,\n        username: $username,\n        mobile:$mobile,\n        email: $email,\n        status:$status){\n          success\n          message\n        }\n  }\n`;\n\nexport const bulkclaimcourse = gql`\n  mutation bulkclaimcourse($id: String, $user_id: String, $category_id: String, $categoryName: String) {\n    bulkclaimcourse(id: $id, user_id: $user_id, category_id: $category_id, categoryName: $categoryName) {\n      message\n      success\n    }\n  }\n`;\n\nexport const markAsRead = gql`\n  mutation markAsRead($notifications:[String]) {\n    markAsRead(notifications : $notifications) {\n      message\n      success\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport const login = gql`\n  query login($username: String, $password: String, $is_admin: Boolean) {\n    login(username: $username, password: $password, is_admin: $is_admin) {\n      success\n      error_msg\n      message {\n        _id\n        full_name\n        profile_img\n        email\n        is_active\n        username\n        token\n        user_id\n        is_blocked\n        is_forum_config\n        is_thread_config\n        is_comment_config\n        is_profile_updated\n        group_id\n        message\n        bb_forum\n        nodebb_response {\n          uid\n        }\n      }\n    }\n  }\n`;\n\nexport const getLoginUserDetail = gql`\n  query get_login_details($username: String!) {\n    get_login_details(username: $username) {\n      success\n      error_msg\n      message {\n        is_admin\n        is_active\n        is_blocked\n        is_profile_updated\n        _id\n        user_id\n        username\n        token\n        full_name\n        is_forum_config\n        is_comment_config\n        is_thread_config\n        message\n        profile_img\n        group_id\n        nodebb_response{\n            uid\n        }\n      }\n    }\n  }\n`;\n\nexport const get_country_details = gql`\n  query get_country_details {\n    get_country_details {\n      message\n      success\n      data {\n        _id\n        countryname\n        countryshortcode\n        created_by\n        created_by_ip\n        updated_on\n        updated_by\n        updated_by_ip\n        is_active\n      }\n    }\n  }\n`;\nexport const get_course_by_user = gql`\n  query get_course_by_user($user_id: String) {\n    get_course_by_user(user_id: $user_id) {\n      success\n      error_msg\n      message {\n        feed_back\n        course_id\n        course_description\n        course_name\n        course_img_url\n        certificate_name\n        max_student_enrollments_allowed\n        short_description\n        rating\n        price\n        coursePlayerStatus {\n          status\n          location\n          course_id\n        }\n      }\n    }\n  }\n`;\n\nexport const get_qualification_details = gql`\n  query get_qualification_details {\n    get_qualification_details {\n      message\n      success\n      data {\n        _id\n        level_name\n        level_code\n        level_id\n        is_active\n      }\n    }\n  }\n`;\n\nexport const get_board_university_details = gql`\n  query get_board_university_details($_id: String!) {\n    get_board_university_details(_id: $_id) {\n      message\n      success\n      data {\n        board {\n          _id\n          Board_Id\n          Board_Name\n          created_on\n          created_by\n          created_by_ip\n          updated_on\n          updated_by\n          updated_by_ip\n          is_active\n        }\n        university {\n          _id\n          University_Id\n          University_Name\n          created_on\n          created_by\n          created_by_ip\n          updated_on\n          updated_by\n          updated_by_ip\n          is_active\n        }\n      }\n    }\n  }\n`;\nexport const get_discipline_details = gql`\n  query get_discipline_details($_id: String!) {\n    get_discipline_details(_id: $_id) {\n      message\n      success\n      data {\n        _id\n        discipline_id\n        discipline_name\n        discipline_code\n        is_active\n      }\n    }\n  }\n`;\n\nexport const get_specification_details = gql`\n  query get_specification_details {\n    get_specification_details {\n      message\n      success\n      data {\n        _id\n        specification_id\n        specification_name\n        specification_code\n        is_active\n      }\n    }\n  }\n`;\n\nexport const get_institute_details = gql`\n  query get_institute_details {\n    get_institute_details {\n      message\n      success\n      data {\n        _id\n        institute_id\n        institute_name\n        institute_code\n        is_active\n      }\n    }\n  }\n`;\n\nexport const get_language_details = gql`\n  query get_language_details {\n    get_language_details {\n      message\n      success\n      data {\n        _id\n        is_active\n        languagecode\n        languagename\n      }\n    }\n  }\n`;\n\nexport const get_user_detail = gql`\n  query get_user_detail($email: String) {\n    get_user_detail(email: $email) {\n      message {\n        user_id\n        email\n        full_name\n        email_verify {\n          flag\n        }\n      }\n      success\n    }\n  }\n`;\n\nexport const get_user_detail_username = gql`\n  query get_user_detail_username($username: String) {\n    get_user_detail_username(username: $username) {\n      message\n      success\n    }\n  }\n`;\n\nexport const list_content = gql`\n  query list_content {\n    list_content {\n      message\n      success\n      data\n    }\n  }\n`;\n\nexport const syllabus_of_particular_scorm = gql`\n  query syllabus_of_particular_scorm(\n    $contentid: String\n    $user_id: String\n    $course_id: String\n  ) {\n    syllabus_of_particular_scorm(\n      contentid: $contentid\n      user_id: $user_id\n      course_id: $course_id\n    ) {\n      message\n      success\n      data {\n        scorm_dtl_user_map {\n          title\n          children {\n            title\n            link\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const getmoduleData = gql`\n  query getmoduleData($courseid: String!, $user_id: String) {\n    getmoduleData(courseid: $courseid, user_id: $user_id) {\n      success\n      data {\n        playerstatusData {\n          success\n          playerstatus {\n            course_dtl {\n              module {\n                topic {\n                  topic_name\n                  status\n                }\n                module_name\n              }\n            }\n          }\n        }\n        courseid\n        _id\n        url\n        totalResourseCount\n        coursename\n        coursefile\n        coursestatus\n        coursetime\n        coursecreated_on\n        coursedetails {\n          modulename\n          modulestatus\n          modulecreated_on\n          moduledetails {\n            topicname\n            topicstatus\n            topiccreated_on\n            topicimages\n            url\n            resourse {\n              _id\n              type\n              files {\n                doc_status\n                _id\n                assignment\n                doc_type\n                path\n                type_name\n                size\n              }\n              doc_type\n              count\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport const check_existing_user = gql`\n  query check_existing_user($username: String) {\n    check_existing_user(username: $username) {\n      message\n      success\n    }\n  }\n`;\n\nexport const get_all_category = gql`\n  query get_all_category($group_id: [String]!) {\n    get_all_category(group_id: $group_id) {\n      success\n      error_msg\n      message {\n        _id\n        category_name\n        category_id\n        category_description\n        language_code\n        created_on\n        updated_on\n        created_by\n        creator_id\n        is_active\n        category_image\n      }\n    }\n  }\n`;\n\nexport const get_sub_category = gql`\n  query get_sub_category($category_id: String!) {\n    get_sub_category(category_id: $category_id) {\n      success\n      message {\n        _id\n        sub_category_id\n        sub_category_name\n        sub_category_description\n        language_code\n        created_on\n        updated_on\n        created_by\n        creator_id\n        is_active\n        sub_category_image\n        parent_category_id\n        is_child\n      }\n      error_msg\n    }\n  }\n`;\n\nexport const getsupersubcategory = gql`\n  query getsupersubcategory($sub_category_id: String!) {\n    getsupersubcategory(sub_category_id: $sub_category_id) {\n      success\n      error_msg\n      message {\n        _id\n        creator_id\n        level\n        created_on\n        updated_on\n        created_by\n        language_code\n        is_active\n        super_sub_category_id\n        super_sub_category_name\n        super_sub_category_image\n        super_sub_category_description\n        parent_sub_category_id\n        parent_category_id\n      }\n    }\n  }\n`;\n\nexport const get_course_by_subcategory = gql`\n  query get_course_by_subcategory(\n    $input_id: String!\n    $input_type: String!\n    $pagenumber: Int!\n  ) {\n    get_course_by_subcategory(\n      input_id: $input_id\n      input_type: $input_type\n      pagenumber: $pagenumber\n    ) {\n      success\n      error_msg\n      total_count\n      message {\n        course_id\n        course_description\n        course_name\n        created_at\n        updated_at\n        version\n        location\n        course_start_datetime\n        course_end_datetime\n        advertised_start\n        course_img_url\n        social_sharing_url\n        certificate_display_behaviour\n        certificates_show_before_end\n        certificate_html_view_enabled\n        has_any_active_web_certificate\n        certificate_name\n        lowest_passing_grade\n        mobile_available\n        visible_to_staff_only\n        pre_requisite {\n          name\n          image\n        }\n        enrollment_start\n        enrollment_end\n        invitation_only\n        max_student_enrollments_allowed\n        announcement\n        catalog_visibility\n        course_video_url\n        short_description\n        self_paced\n        marketing_url\n        course_language\n        certificate_available_date\n        article_count\n        downloadable_resource_count\n        course_level\n        step_towards\n        rating\n        price\n        what_will_you_learn\n        course_category\n        course_type\n        course_content_details {\n          name\n          type\n          is_active\n          parent_id\n          description\n          sub_section_id\n          file_content {\n            video_url\n            image_url\n            audio_url\n            file_url\n          }\n          unit {\n            name\n            type\n            is_active\n            parent_id\n            description\n            sub_section_id\n            file_content {\n              video_url\n              image_url\n              audio_url\n              file_url\n            }\n          }\n        }\n        author_details {\n          author_name\n          description\n          image\n        }\n      }\n    }\n  }\n`;\n\n// export const get_all_course_by_usergroup = gql`\n//   query get_all_course_by_usergroup($group_id: String!,$pagenumber: Int!,$sort_type:String!){\n//     get_all_course_by_usergroup(group_id: $group_id,pagenumber: $pagenumber,sort_type: $sort_type){\n//     success\n//     error_msg\n//     message{\n//     course_id\n//     course_description\n//     course_name\n//     enrollment_status\n//     created_at\n//     updated_at\n//     version\n//     location\n//     course_start_datetime\n//     course_end_datetime\n//     advertised_start\n//     course_img_url\n//     social_sharing_url\n//     certificate_display_behaviour\n//     certificates_show_before_end\n//     certificate_html_view_enabled\n//     has_any_active_web_certificate\n//     certificate_name\n//     lowest_passing_grade\n//     mobile_available\n//     visible_to_staff_only\n//     pre_requisite{\n//       name\n//       image\n//   }\n//     enrollment_start\n//     enrollment_end\n//     invitation_only\n//     max_student_enrollments_allowed\n//     announcement\n//     catalog_visibility\n//     course_video_url\n//     short_description\n//     self_paced\n//     marketing_url\n//     course_language\n//     certificate_available_date\n//     article_count\n//     downloadable_resource_count\n//     course_level\n//     step_towards\n//     rating\n//     price\n//     what_will_you_learn\n//     course_category\n//     course_type\n//     course_content_details{\n//     name\n//     type\n//     is_active\n//     parent_id\n//     description\n//     sub_section_id\n//     file_content{\n//     video_url\n//     image_url\n//     audio_url\n//     file_url\n//     }\n//     unit{\n//     name\n//     type\n//     is_active\n//     parent_id\n//     description\n//     sub_section_id\n//     file_content{\n//     video_url\n//     image_url\n//     audio_url\n//     file_url\n//     }\n//     }\n//     }\n//     author_details{\n//     author_name\n//     description\n//     image\n//     }\n//     }\n//     }\n//     }`;\nexport const get_module_topic = gql`\n  query get_module_topic($course_id: String) {\n    get_module_topic(course_id: $course_id) {\n      data {\n        _id\n        modulename\n      }\n      success\n    }\n  }\n`;\n\nexport const getLevelCategoryData = gql`\n  query getLevelCategoryData {\n    getLevelCategoryData {\n      success\n      message\n      data {\n        level1 {\n          _id\n          category_name\n          category_id\n          level\n        }\n        level2 {\n          _id\n          sub_category_id\n          sub_category_name\n          parent_category_id\n          level\n        }\n        level3 {\n          _id\n          parent_category_id\n          parent_sub_category_id\n          level\n          language_code\n          super_sub_category_id\n          super_sub_category_name\n        }\n      }\n    }\n  }\n`;\n\n// Guildline Search\nexport const getDetailsCount = gql`\n  query getDetailsCount {\n    getDetailsCount {\n      success\n      error_msg\n      message {\n        course_data {\n          course_language\n          count\n        }\n        author_data {\n          authordetails\n          count\n        }\n        coursepartner_data {\n          coursepartnerdetails\n          count\n        }\n        coursemode_data {\n          course_mode\n          count\n        }\n        other_data {\n          fieldCount\n          affectedRows\n          insertId\n          serverStatus\n          warningCount\n          message\n          protocol41\n          changedRows\n        }\n      }\n    }\n  }\n`;\n\nexport const getlearnertrack = gql`\n  query get_learner_track($user_id: String!, $_id: String!) {\n    get_learner_track(user_id: $user_id, _id: $_id) {\n      success\n      error_msg\n      message {\n        activities_and_enroll {\n          _id\n          last_logout\n          last_login\n          courseObjects {\n            course_id\n            course_active_time\n            status\n            course_description\n            course_name\n            course_start_datetime\n            course_end_datetime\n            enrollment_start\n            enrollment_end\n            author_details {\n              author_name\n              description\n              image\n            }\n          }\n        }\n        Enrolled_courses {\n          status\n          is_active\n          _id\n          user_id\n          group_id\n          course_id\n          created_at\n          updated_at\n          status_reason\n          course_description\n          course_name\n          course_start_datetime\n          course_end_datetime\n          enrollment_start\n          enrollment_end\n          author_details {\n            author_name\n            description\n            image\n          }\n        }\n      }\n    }\n  }\n`;\nexport const getlearnerdashboarddetails = gql`\n  query getlearnerdashboarddetails($user_id: String) {\n    getlearnerdashboarddetails(user_id: $user_id) {\n      success\n      message\n      data {\n        courseEnrolled {\n          totalCount\n          IncDecPec\n          valueIncDecPec\n        }\n        suspend {\n          _id\n          totalCount\n          IncDecPec\n          valueIncDecPec\n        }\n        incomplete {\n          _id\n          totalCount\n          IncDecPec\n          valueIncDecPec\n        }\n        completed {\n          _id\n          totalCount\n          IncDecPec\n          valueIncDecPec\n        }\n        lastAccessedCourses {\n          course_id\n          course_name\n          course_description\n          course_img_url\n          coursePlayerStatus {\n            _id\n            course_id\n            course_percentage\n            location\n            status\n            updated_on\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const getLearnerenrolledCourses = gql`\n  query getLearnerenrolledCourses(\n    $user_id: String\n    $user_obj_id: String\n    $catalogue_id: String\n    $category_id: String\n    $jobRoleCategoryId: String\n    $searchString: String\n  ) {\n    getLearnerenrolledCourses(\n      user_id: $user_id\n      user_obj_id: $user_obj_id\n      catalogue_id: $catalogue_id\n      category_id: $category_id\n      jobRoleCategoryId: $jobRoleCategoryId\n      searchString: $searchString\n    ) {\n      success\n      message\n      data {\n        suspend {\n          _id\n          totalCount\n          IncDecPec\n          valueIncDecPec\n        }\n        incomplete {\n          _id\n          totalCount\n          IncDecPec\n          valueIncDecPec\n        }\n        courseEnrolled {\n          course_id\n          course_type\n          course_mode\n          course_start_datetime\n          course_end_datetime\n          course_name\n          course_description\n          short_description\n          author_details {\n            author_name\n            description\n            image\n          }\n          course_img_url\n          rating\n          price\n          totalLearners\n          assignmentCount\n          forumCount\n          categoryName\n          batchCourse\n          upComingLiveClassRoom{\n            courseid\n            link\n            activitytype\n            startdate\n            enddate\n            status\n          }\n          course_duration\n          coursePlayerStatus {\n            status\n            course_percentage\n            feedback_status\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const get_trending_course = gql`\n  query get_trending_course {\n    get_trending_course {\n      success\n      error_msg\n      total_count\n      data {\n        course_id\n        course_description\n        course_name\n        course_start_datetime\n        course_end_datetime\n        enrollment_start\n        enrollment_end\n        course_img_url\n        short_description\n      }\n    }\n  }\n`;\n\nexport const get_popular_course = gql`\n  query get_popular_course {\n    get_popular_course {\n      success\n      error_msg\n      total_count\n      data {\n        course_id\n        course_description\n        course_name\n        course_start_datetime\n        course_end_datetime\n        enrollment_start\n        enrollment_end\n        course_img_url\n        short_description\n      }\n    }\n  }\n`;\n\n// getting popular course\n\nexport const getPopularcourse = gql`\n  query getPopularcourse {\n    getPopularcourse {\n      success\n      error_msg\n      data {\n        course_id\n        course_name\n        course_img_url\n        course_description\n        rating\n        price\n        learner_count\n        enrollment_end\n        enrollment_start\n      }\n    }\n  }\n`;\nexport const getFeedbackQuestion = gql`\n  query getFeedbackQuestion {\n    getFeedbackQuestion {\n      message\n      success\n      success\n      message\n      data {\n        _id\n        question\n      }\n    }\n  }\n`;\nexport const getCoursePlayerStatusForCourse = gql`\n  query getCoursePlayerStatusForCourse($user_id: String!, $course_id: String!) {\n    getCoursePlayerStatusForCourse(user_id: $user_id, course_id: $course_id) {\n      success\n      message {\n        _id\n        status\n        location\n        course_id\n        feedback_status\n        course_percentage\n      }\n    }\n  }\n`;\n\nexport const getAssignmentmoduleData = gql`\n  query getAssignmentmoduleData($courseid: String, $user_id: String) {\n    getAssignmentmoduleData(courseid: $courseid, user_id: $user_id) {\n      success\n      message\n      data {\n        courseid\n        coursedetails {\n          modulename\n          moduledetails {\n            topicname\n            topicimages\n            url\n            resourse {\n              assignment_count\n              type\n              type_name\n              doc_type\n              _id\n              files {\n                _id\n                assignment\n                path\n                type_name\n                doc_status\n                grade_status\n                score_mark\n                resubmit\n                doc_type\n                score\n                startDate\n                endDate\n              }\n            }\n          }\n        }\n        courseEndDate\n        courseStartDate\n      }\n    }\n  }\n`;\n\nexport const get_read_learner_activity = gql`\n  query get_read_learner_activity($userid: String!, $date: String!) {\n    get_read_learner_activity(userid: $userid, date: $date) {\n      success\n      error_msg\n      message {\n        _id\n        status\n        activity_details {\n          topicname\n          status\n          courseid\n          coursename\n          modulename\n          startdate\n          enddate\n          activitytype\n          activityname\n          resourcefile {\n            assignment\n            checked\n            doc_type\n            filename\n            path\n            size\n            type_name\n            _id\n          }\n\n          score\n          link\n          created_on\n          createdby_name\n          createdby_role\n          createdby_id\n        }\n      }\n    }\n  }\n`;\n\nexport const playerModuleAndTopic = gql`\n  query playerModuleAndTopic($contentID: String, $user_id: String) {\n    playerModuleAndTopic(contentID: $contentID, user_id: $user_id) {\n      message {\n        _id\n        url\n        total_topic_len\n        course_id\n        childData {\n          title\n          _id\n          status\n          topic_len\n          moduletime\n          children {\n            _id\n            title\n            link\n            status\n            isVisible\n          }\n        }\n      }\n      success\n    }\n  }\n`;\nexport const ViewSingleTopicDiscussionData = gql`\n  query ViewSingleTopicDiscussionData($topic_slug: String, $uid: Int!) {\n    ViewSingleTopicDiscussionData(topic_slug: $topic_slug, uid: $uid) {\n      success\n      message\n      data {\n        cid\n        mainPid\n        postcount\n        slug\n        tid\n        title\n        uid\n        viewcount\n        titleRaw\n        timestampISO\n        lastposttimeISO\n        bookmark\n        bookmarkThreshold\n        category {\n          cid\n          name\n          description\n          link\n          numRecentReplies\n          parentCid\n          post_count\n          slug\n          topic_count\n          totalPostCount\n          totalTopicCount\n        }\n        posts {\n          content\n          local_content\n          deleted\n          pid\n          tid\n          uid\n          a2i_lable\n          toPid\n          bookmarks\n          upvotes\n          downvotes\n          votes\n          timestampISO\n          user {\n            fullname\n            postcount\n            uid\n            username\n            userslug\n            lastonlineISO\n            picture\n          }\n          bookmarked\n          upvoted\n          downvoted\n          selfPost\n          index\n        }\n      }\n    }\n  }\n`;\nexport const ViewAllThreadDataBid = gql`\n  query ViewAllThreadData($module_name: String, $course_id: String, $batch_id: String) {\n    ViewAllThreadData(module_name: $module_name, course_id: $course_id, batch_id: $batch_id) {\n      success\n      message\n      data {\n        cid\n        description\n        name\n        numRecentReplies\n        order\n        parentCid\n        post_count\n        slug\n        topic_count\n        totalPostCount\n        totalTopicCount\n        title\n        topics {\n          cid\n          thread_status\n          deleted\n          postcount\n          slug\n          tid\n          title\n          uid\n          viewcount\n          titleRaw\n          timestampISO\n          lastposttimeISO\n          category {\n            name\n            cid\n          }\n          user {\n            fullname\n            picture\n            postcount\n            status\n            uid\n            username\n            userslug\n          }\n        }\n      }\n    }\n  }\n`;\nexport const ViewAllThreadData = gql`\n  query ViewAllThreadData(\n    $module_name: String\n    $course_id: String\n    $batch_id: String\n  ) {\n    ViewAllThreadData(\n      module_name: $module_name\n      course_id: $course_id\n      batch_id: $batch_id\n    ) {\n      success\n      message\n      data {\n        cid\n        description\n        name\n        numRecentReplies\n        order\n        parentCid\n        post_count\n        slug\n        topic_count\n        totalPostCount\n        totalTopicCount\n        title\n        topics {\n          cid\n          thread_status\n          deleted\n          postcount\n          slug\n          tid\n          title\n          uid\n          viewcount\n          titleRaw\n          timestampISO\n          lastposttimeISO\n          category {\n            name\n            cid\n          }\n          user {\n            fullname\n            picture\n            postcount\n            status\n            uid\n            username\n            userslug\n          }\n        }\n      }\n    }\n  }\n`;\nexport const getReadLeanerActivity = gql`\n  query get_read_learner_activity($userid: String!, $date: String!) {\n    get_read_learner_activity(userid: $userid, date: $date) {\n      success\n      error_msg\n      message {\n        _id\n        status\n        activity_details {\n          topicname\n          status\n          courseid\n          coursename\n          modulename\n          startdate\n          enddate\n          activitytype\n          activityname\n          resourcefile {\n            assignment\n            checked\n            doc_type\n            filename\n            path\n            size\n            type_name\n            _id\n          }\n\n          score\n          link\n          created_on\n          createdby_name\n          createdby_role\n          createdby_id\n        }\n      }\n    }\n  }\n`;\n\nexport const get_organization_by_id = gql`\n  query get_organization_by_id($organization_id: String) {\n    get_organization_by_id(organization_id: $organization_id) {\n      success\n      error_msg\n      message {\n        _id\n        is_active\n        organization_name\n        organization_logo\n        organization_id\n        created_by\n        created_on\n        updated_on\n        updated_by\n        learner_login_image\n        role_details {\n          _id\n          role_id\n          role_name\n        }\n        admin_details {\n          _id\n          admin_email\n          admin_username\n        }\n        group_details {\n          _id\n          group_id\n          group_name\n        }\n      }\n    }\n  }\n`;\nexport const getCountForCategories = gql`\n  query getCountForCategories($userObjId: String!) {\n    getCountForCategories(userObjId: $userObjId) {\n      message\n      success\n      data{\n        catalogueId\n        catalogueName\n        categories{\n          categoryId\n          categoryName\n          totalCount\n          enrollCount\n          subCategory{\n            subCategoryId\n            subCategoryName\n            totalCount\n            superSubCategory{\n              superSubCategoryId\n              superSubCategoryName\n              totalCount\n            }\n          }\n        }\n      }\n      }\n    }\n`;\nexport const getCoureBasedOnCatalog = gql`\n  query getCoureBasedOnCatalog($catalogue_id: String!, $category_id: String!,\n    $userObjId: String!, $subCategoryId: String, $superSubCategoryId: String) {\n    getCoureBasedOnCatalog(catalogue_id: $catalogue_id,\n      category_id: $category_id, userObjId: $userObjId, subCategoryId: $subCategoryId,\n      superSubCategoryId: $superSubCategoryId) {\n      data{\n        course_id\n        clamaiedStatus\n        course_description\n        course_name\n        version\n        course_start_datetime\n        location\n        course_end_datetime\n        advertised_start\n        course_img_url\n        social_sharing_url\n        certificate_display_behaviour\n        certificate_name\n        enrollment_start\n        mobile_available\n        short_description\n      }\n    }\n  }\n`;\n\n\nexport const getcalenderactivity = gql`\n  query getcalenderactivity($userid: String!, $date: String!) {\n    getcalenderactivity(userid: $userid, date: $date) {\n      success\n      error_msg\n      message {\n        start\n        end\n        title\n      }\n    }\n  }\n`;\nexport const singleBatchInfo = gql`\n  query getbatchdetails($user_id: String!, $course_id: String!) {\n    getbatchdetails(user_id: $user_id, course_id: $course_id) {\n      success\n      message {\n        _id\n        batchname\n        batchdescription\n        batchstartdate\n        batchenddate\n        isTeams\n        created_on\n        batchid\n      }\n    }\n  }\n`;\n\nexport const getCountForJobroleCategories = gql`\n  query getCountForJobroleCategories($userObjId: String!) {\n    getCountForJobroleCategories(userObjId: $userObjId) {\n      success\n      message\n      data {\n        jobroleCategoryId\n        jobroleCategoryName\n        jobroleEnrollCount\n      }\n    }\n  }\n      `;\n\nexport const getprojectActivityData = gql`\n      query getprojectActivityData($userId: String, $courseId: String){\n        getprojectActivityData(userId: $userId, courseId: $courseId){\n        success\n        data {\n        _id\n        projectActivity {\n        activitystartdate\n        activityenddate\n        submit_status\n        course_id\n        batchid\n        activityId\n        module_id\n        activityname\n        topic_id\n        evaluationmode\n        projecttype\n        total_mark\n        score_mark\n        submitted_on\n        submitted_date\n        grade_status\n        instructor_status\n        comments\n        groupname\n        groupcount\n        videodetails{\n        id\n        videourl\n        name\n        size\n        }\n        materialDetails{\n        id\n        materialurl\n        name\n        doctype\n        size\n        }\n        groupDetails{\n        id\n        name\n        username\n        email\n        }\n        }\n        }\n        }\n        }\n`;\nexport const getperformActivityData = gql`\nquery getperformActivityData($userId: String , $courseId: String) {\n  getperformActivityData(userId: $userId , courseId: $courseId ) {\n    success\n    data {\n    _id\n    performActivity {\n    activitystartdate\n    activityenddate\n    cardstatus\n    course_id\n    batchid\n    activityId\n    iterationTotal\n    modulename\n    activityname\n    topicname\n    evaluationmode\n    performtype\n    submittedTotal\n    materialDetails{\n    id\n    materialurl\n    name\n    doctype\n    size\n    }\n    iterationDetails{\n    iterationid\n    iterationcount\n    iterationstatus\n    totalmark\n    scoremark\n    submitted_on\n    submitted_date\n    grade_status\n    instructor_status\n    comments\n    videodetails{\n    id\n    videourl\n    name\n    size\n    }\n    assessmentreport{\n    id\n    imageurl\n    name\n    doctype\n    size\n    }\n    }\n    }\n    }\n  }\n}\n    `;\n\n\n","module.exports = \"\\n  <main>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 align-self-center\\\">\\n          <svg version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n            viewBox=\\\"0 0 800 600\\\">\\n            <g>\\n              <defs>\\n                <clipPath id=\\\"GlassClip\\\">\\n                  <path\\n                    d=\\\"M380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5\\n                  s-28.485-16.599-34.877-24.192c-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13\\n                  c6.755-0.61,20.546-0.608,41.785,5.087s33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z\\\" />\\n                </clipPath>\\n                <clipPath id=\\\"cordClip\\\">\\n                  <rect width=\\\"800\\\" height=\\\"600\\\" />\\n                </clipPath>\\n              </defs>\\n  \\n              <g id=\\\"planet\\\">\\n                <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-miterlimit=\\\"10\\\" cx=\\\"572.859\\\" cy=\\\"108.803\\\"\\n                  r=\\\"90.788\\\" />\\n  \\n                <circle id=\\\"craterBig\\\" fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-miterlimit=\\\"10\\\" cx=\\\"548.891\\\"\\n                  cy=\\\"62.319\\\" r=\\\"13.074\\\" />\\n  \\n                <circle id=\\\"craterSmall\\\" fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-miterlimit=\\\"10\\\" cx=\\\"591.743\\\"\\n                  cy=\\\"158.918\\\" r=\\\"7.989\\\" />\\n                <path id=\\\"ring\\\" fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\"\\n                  stroke-miterlimit=\\\"10\\\" d=\\\"\\n              M476.562,101.461c-30.404,2.164-49.691,4.221-49.691,8.007c0,6.853,63.166,12.408,141.085,12.408s141.085-5.555,141.085-12.408\\n              c0-3.378-15.347-4.988-40.243-7.225\\\" />\\n  \\n                <path id=\\\"ringShadow\\\" opacity=\\\"0.5\\\" fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\"\\n                  stroke-miterlimit=\\\"10\\\" d=\\\"\\n              M483.985,127.43c23.462,1.531,52.515,2.436,83.972,2.436c36.069,0,68.978-1.19,93.922-3.149\\\" />\\n              </g>\\n              <g id=\\\"stars\\\">\\n                <g id=\\\"starsBig\\\">\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"518.07\\\" y1=\\\"245.375\\\" x2=\\\"518.07\\\" y2=\\\"266.581\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"508.129\\\" y1=\\\"255.978\\\" x2=\\\"528.01\\\" y2=\\\"255.978\\\" />\\n                  </g>\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"154.55\\\" y1=\\\"231.391\\\" x2=\\\"154.55\\\" y2=\\\"252.598\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"144.609\\\" y1=\\\"241.995\\\" x2=\\\"164.49\\\" y2=\\\"241.995\\\" />\\n                  </g>\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"320.135\\\" y1=\\\"132.746\\\" x2=\\\"320.135\\\" y2=\\\"153.952\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"310.194\\\" y1=\\\"143.349\\\" x2=\\\"330.075\\\" y2=\\\"143.349\\\" />\\n                  </g>\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"200.67\\\" y1=\\\"483.11\\\" x2=\\\"200.67\\\" y2=\\\"504.316\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"210.611\\\" y1=\\\"493.713\\\" x2=\\\"190.73\\\" y2=\\\"493.713\\\" />\\n                  </g>\\n                </g>\\n                <g id=\\\"starsSmall\\\">\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"432.173\\\" y1=\\\"380.52\\\" x2=\\\"432.173\\\" y2=\\\"391.83\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"426.871\\\" y1=\\\"386.175\\\" x2=\\\"437.474\\\" y2=\\\"386.175\\\" />\\n                  </g>\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"489.555\\\" y1=\\\"299.765\\\" x2=\\\"489.555\\\" y2=\\\"308.124\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"485.636\\\" y1=\\\"303.945\\\" x2=\\\"493.473\\\" y2=\\\"303.945\\\" />\\n                  </g>\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"231.468\\\" y1=\\\"291.009\\\" x2=\\\"231.468\\\" y2=\\\"299.369\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"227.55\\\" y1=\\\"295.189\\\" x2=\\\"235.387\\\" y2=\\\"295.189\\\" />\\n                  </g>\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"244.032\\\" y1=\\\"547.539\\\" x2=\\\"244.032\\\" y2=\\\"555.898\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"247.95\\\" y1=\\\"551.719\\\" x2=\\\"240.113\\\" y2=\\\"551.719\\\" />\\n                  </g>\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"186.359\\\" y1=\\\"406.967\\\" x2=\\\"186.359\\\" y2=\\\"415.326\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"190.277\\\" y1=\\\"411.146\\\" x2=\\\"182.44\\\" y2=\\\"411.146\\\" />\\n                  </g>\\n                  <g>\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"480.296\\\" y1=\\\"406.967\\\" x2=\\\"480.296\\\" y2=\\\"415.326\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                      x1=\\\"484.215\\\" y1=\\\"411.146\\\" x2=\\\"476.378\\\" y2=\\\"411.146\\\" />\\n                  </g>\\n                </g>\\n                <g id=\\\"circlesBig\\\">\\n  \\n                  <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                    cx=\\\"588.977\\\" cy=\\\"255.978\\\" r=\\\"7.952\\\" />\\n  \\n                  <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                    cx=\\\"450.066\\\" cy=\\\"320.259\\\" r=\\\"7.952\\\" />\\n  \\n                  <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                    cx=\\\"168.303\\\" cy=\\\"353.753\\\" r=\\\"7.952\\\" />\\n  \\n                  <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                    cx=\\\"429.522\\\" cy=\\\"201.185\\\" r=\\\"7.952\\\" />\\n  \\n                  <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                    cx=\\\"200.67\\\" cy=\\\"176.313\\\" r=\\\"7.952\\\" />\\n  \\n                  <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                    cx=\\\"133.343\\\" cy=\\\"477.014\\\" r=\\\"7.952\\\" />\\n  \\n                  <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                    cx=\\\"283.521\\\" cy=\\\"568.033\\\" r=\\\"7.952\\\" />\\n  \\n                  <circle fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                    cx=\\\"413.618\\\" cy=\\\"482.387\\\" r=\\\"7.952\\\" />\\n                </g>\\n                <g id=\\\"circlesSmall\\\">\\n                  <circle fill=\\\"#0E0620\\\" cx=\\\"549.879\\\" cy=\\\"296.402\\\" r=\\\"2.651\\\" />\\n                  <circle fill=\\\"#0E0620\\\" cx=\\\"253.29\\\" cy=\\\"229.24\\\" r=\\\"2.651\\\" />\\n                  <circle fill=\\\"#0E0620\\\" cx=\\\"434.824\\\" cy=\\\"263.931\\\" r=\\\"2.651\\\" />\\n                  <circle fill=\\\"#0E0620\\\" cx=\\\"183.708\\\" cy=\\\"544.176\\\" r=\\\"2.651\\\" />\\n                  <circle fill=\\\"#0E0620\\\" cx=\\\"382.515\\\" cy=\\\"530.923\\\" r=\\\"2.651\\\" />\\n                  <circle fill=\\\"#0E0620\\\" cx=\\\"130.693\\\" cy=\\\"305.608\\\" r=\\\"2.651\\\" />\\n                  <circle fill=\\\"#0E0620\\\" cx=\\\"480.296\\\" cy=\\\"477.014\\\" r=\\\"2.651\\\" />\\n                </g>\\n              </g>\\n              <g id=\\\"spaceman\\\" clip-path=\\\"url(cordClip)\\\">\\n                <path id=\\\"cord\\\" fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\"\\n                  stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"10\\\"\\n                  d=\\\"\\n              M273.813,410.969c0,0-54.527,39.501-115.34,38.218c-2.28-0.048-4.926-0.241-7.841-0.548\\n              c-68.038-7.178-134.288-43.963-167.33-103.87c-0.908-1.646-1.793-3.3-2.654-4.964c-18.395-35.511-37.259-83.385-32.075-118.817\\\" />\\n  \\n                <path id=\\\"backpack\\\" fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\"\\n                  stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"10\\\" d=\\\"\\n              M338.164,454.689l-64.726-17.353c-11.086-2.972-17.664-14.369-14.692-25.455l15.694-58.537\\n              c3.889-14.504,18.799-23.11,33.303-19.221l52.349,14.035c14.504,3.889,23.11,18.799,19.221,33.303l-15.694,58.537\\n              C360.647,451.083,349.251,457.661,338.164,454.689z\\\" />\\n                <g id=\\\"antenna\\\">\\n                  <line fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" x1=\\\"323.396\\\" y1=\\\"236.625\\\" x2=\\\"295.285\\\" y2=\\\"353.753\\\" />\\n                  <circle fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" cx=\\\"323.666\\\" cy=\\\"235.617\\\" r=\\\"6.375\\\" />\\n                </g>\\n                <g id=\\\"armR\\\">\\n  \\n                  <path fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" d=\\\"\\n                  M360.633,363.039c1.352,1.061,4.91,5.056,5.824,6.634l27.874,47.634c3.855,6.649,1.59,15.164-5.059,19.02l0,0\\n                  c-6.649,3.855-15.164,1.59-19.02-5.059l-5.603-9.663\\\" />\\n  \\n                  <path fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" d=\\\"\\n                  M388.762,434.677c5.234-3.039,7.731-8.966,6.678-14.594c2.344,1.343,4.383,3.289,5.837,5.793\\n                  c4.411,7.596,1.829,17.33-5.767,21.741c-7.596,4.411-17.33,1.829-21.741-5.767c-1.754-3.021-2.817-5.818-2.484-9.046\\n                  C375.625,437.355,383.087,437.973,388.762,434.677z\\\" />\\n                </g>\\n                <g id=\\\"armL\\\">\\n  \\n                  <path fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" d=\\\"\\n                  M301.301,347.66c-1.702,0.242-5.91,1.627-7.492,2.536l-47.965,27.301c-6.664,3.829-8.963,12.335-5.134,18.999h0\\n                  c3.829,6.664,12.335,8.963,18.999,5.134l9.685-5.564\\\" />\\n  \\n                  <path fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" d=\\\"\\n                  M241.978,395.324c-3.012-5.25-2.209-11.631,1.518-15.977c-2.701-0.009-5.44,0.656-7.952,2.096\\n                  c-7.619,4.371-10.253,14.09-5.883,21.71c4.371,7.619,14.09,10.253,21.709,5.883c3.03-1.738,5.35-3.628,6.676-6.59\\n                  C252.013,404.214,245.243,401.017,241.978,395.324z\\\" />\\n                </g>\\n                <g id=\\\"body\\\">\\n  \\n                  <path fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" d=\\\"\\n                  M353.351,365.387c-7.948,1.263-16.249,0.929-24.48-1.278c-8.232-2.207-15.586-6.07-21.836-11.14\\n                  c-17.004,4.207-31.269,17.289-36.128,35.411l-1.374,5.123c-7.112,26.525,8.617,53.791,35.13,60.899l0,0\\n                  c26.513,7.108,53.771-8.632,60.883-35.158l1.374-5.123C371.778,395.999,365.971,377.536,353.351,365.387z\\\" />\\n                  <path fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" d=\\\"\\n                  M269.678,394.912L269.678,394.912c26.3,20.643,59.654,29.585,93.106,25.724l2.419-0.114\\\" />\\n                </g>\\n                <g id=\\\"legs\\\">\\n                  <g id=\\\"legR\\\">\\n  \\n                    <path fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                      stroke-miterlimit=\\\"10\\\" d=\\\"\\n                      M312.957,456.734l-14.315,53.395c-1.896,7.07,2.299,14.338,9.37,16.234l0,0c7.07,1.896,14.338-2.299,16.234-9.37l17.838-66.534\\n                      C333.451,455.886,323.526,457.387,312.957,456.734z\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                      stroke-miterlimit=\\\"10\\\" x1=\\\"304.883\\\" y1=\\\"486.849\\\" x2=\\\"330.487\\\" y2=\\\"493.713\\\" />\\n                  </g>\\n                  <g id=\\\"legL\\\">\\n  \\n                    <path fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                      stroke-miterlimit=\\\"10\\\" d=\\\"\\n                      M296.315,452.273L282,505.667c-1.896,7.07-9.164,11.265-16.234,9.37l0,0c-7.07-1.896-11.265-9.164-9.37-16.234l17.838-66.534\\n                      C278.993,441.286,286.836,447.55,296.315,452.273z\\\" />\\n  \\n                    <line fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                      stroke-miterlimit=\\\"10\\\" x1=\\\"262.638\\\" y1=\\\"475.522\\\" x2=\\\"288.241\\\" y2=\\\"482.387\\\" />\\n                  </g>\\n                </g>\\n                <g id=\\\"head\\\">\\n  \\n                  <ellipse transform=\\\"matrix(0.259 -0.9659 0.9659 0.259 -51.5445 563.2371)\\\" fill=\\\"#FFFFFF\\\"\\n                    stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" cx=\\\"341.295\\\" cy=\\\"315.211\\\" rx=\\\"61.961\\\" ry=\\\"60.305\\\" />\\n                  <path id=\\\"headStripe\\\" fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\"\\n                    stroke-linejoin=\\\"round\\\" stroke-miterlimit=\\\"10\\\" d=\\\"\\n                  M330.868,261.338c-7.929,1.72-15.381,5.246-21.799,10.246\\\" />\\n  \\n                  <path fill=\\\"#FFFFFF\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\"\\n                    stroke-miterlimit=\\\"10\\\" d=\\\"\\n                  M380.857,346.164c-1.247,4.651-4.668,8.421-9.196,10.06c-9.332,3.377-26.2,7.817-42.301,3.5s-28.485-16.599-34.877-24.192\\n                  c-3.101-3.684-4.177-8.66-2.93-13.311l7.453-27.798c0.756-2.82,3.181-4.868,6.088-5.13c6.755-0.61,20.546-0.608,41.785,5.087\\n                  s33.181,12.591,38.725,16.498c2.387,1.682,3.461,4.668,2.705,7.488L380.857,346.164z\\\" />\\n                  <g clip-path=\\\"url(#GlassClip)\\\">\\n                    <polygon id=\\\"glassShine\\\" fill=\\\"none\\\" stroke=\\\"#0E0620\\\" stroke-width=\\\"3\\\" stroke-miterlimit=\\\"10\\\" points=\\\"\\n                      278.436,375.599 383.003,264.076 364.393,251.618 264.807,364.928 \\t\\t\\t\\t\\\" />\\n                  </g>\\n                </g>\\n              </g>\\n            </g>\\n          </svg>\\n        </div>\\n        <div class=\\\"col-md-6 align-self-center\\\">\\n          <h1>404</h1>\\n          <h2>UH OH! You're lost.</h2>\\n          <p>The page you are looking for does not exist.\\n            How you got here is a mystery. But you can click the button below\\n            to go back to the homepage.\\n          </p>\\n         <button class=\\\"button\\\" (click)=\\\"goToHome()\\\">Home</button>\\n        </div>\\n      </div>\\n    </div>\\n  </main>\"","module.exports = \".container {\\n  padding-top: 83px; }\\n\\nh1 {\\n  font-size: 100px; }\\n\\n.button {\\n  background-color: #C02222 !important;\\n  /* Green */\\n  border: none;\\n  color: white;\\n  padding: 15px 32px;\\n  text-align: center;\\n  text-decoration: none;\\n  display: inline-block;\\n  font-size: 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2F2aW5hc2gvRG9jdW1lbnRzL2NpbnRhbmEvbHhwIHByb2plY3QvV2ViJTIwUG9ydGFsL3NyYy9hcHAvbm90LWZvdW5kL25vdC1mb3VuZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGlCQUFpQixFQUFBOztBQUVsQjtFQUNDLGdCQUFlLEVBQUE7O0FBR2hCO0VBQ0Msb0NBQThDO0VBQUcsVUFBQTtFQUNqRCxZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIscUJBQXFCO0VBQ3JCLHFCQUFxQjtFQUNyQixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ub3QtZm91bmQvbm90LWZvdW5kLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcInZhcmlhYmxlXCI7XG5cbi5jb250YWluZXIge1xuICAgIHBhZGRpbmctdG9wOiA4M3B4O1xufVxuICAgaDF7XG4gICAgZm9udC1zaXplOjEwMHB4O1xuICAgfVxuXG4gICAuYnV0dG9uIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAgJGx4cC10aGVtZS1ncmVlbiAhaW1wb3J0YW50OzsgLyogR3JlZW4gKi9cbiAgICBib3JkZXI6IG5vbmU7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDE1cHggMzJweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LXNpemU6IDE2cHg7XG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.scss']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor(\n\n    private router: Router,\n  ) { }\n\n  ngOnInit() {\n  }\n\n  goToHome(){\n    this.router.navigate(['/Learner']);\n  }\n\n}\n","import {\n    transition,\n    trigger,\n    query,\n    style,\n    animate,\n    group,\n    animateChild\n } from '@angular/animations';\nexport const slideInAnimation =\n    trigger('routeAnimations', [\n         transition('Learner => *', [\n              query(':enter, :leave',\n                   style({ position: 'fixed', width: '100%' }),\n                   { optional: true }),\n              group([\n                   query(':enter', [\n                       style({ transform: 'translateX(-100%)' }),\n                       animate('0.5s ease-in-out',\n                       style({ transform: 'translateX(0%)' }))\n                   ], { optional: true }),\n                   query(':leave', [\n                       style({ transform:   'translateX(0%)'}),\n                       animate('0.5s ease-in-out',\n                       style({ transform: 'translateX(-100%)' }))\n                   ], { optional: true }),\n              ])\n         ]),\n         transition('recover => *', [\n              query(':enter, :leave',\n                   style({ position: 'fixed',  width: '100%' }),\n                   { optional: true }),\n              group([\n                   query(':enter', [\n                       style({ transform: 'translateX(100%)' }),\n                       animate('0.5s ease-in-out',\n                       style({ transform: 'translateX(0%)' }))\n                   ], { optional: true }),\n                   query(':leave', [\n                       style({ transform: 'translateX(0%)' }),\n                       animate('0.5s ease-in-out',\n                       style({ transform: 'translateX(-100%)' }))\n                       ], { optional: true }),\n               ])\n         ]),\n         transition('About => Contact', [\n               query(':enter, :leave',\n                   style({ position: 'fixed', width: '100%' }),\n                   { optional: true }),\n               group([\n                   query(':enter', [\n                       style({ transform: 'translateX(100%)' }),\n                       animate('0.5s ease-in-out',\n                       style({ transform: 'translateX(0%)' }))\n                   ], { optional: true }),\n                   query(':leave', [\n                       style({ transform: 'translateX(0%)' }),\n                       animate('0.5s ease-in-out',\n                       style({ transform: 'translateX(-100%)' }))\n                   ], { optional: true }),\n               ])\n         ]),\n         transition('About => Home', [\n               query(':enter, :leave',\n                   style({ position: 'fixed', width: '100%' }),\n                   { optional: true }),\n               group([\n                   query(':enter', [\n                       style({ transform: 'translateX(-100%)' }),\n                       animate('0.5s ease-in-out',\n                       style({ transform: 'translateX(0%)' }))\n                   ], { optional: true }),\n                //    query(':leave', [\n                //         style({ transform: 'translateX(0%)' }),\n                //         animate('0.5s ease-in-out',\n                //         style({ transform: 'translateX(100%)' })\n                //    ], { optional: true }),\n               ])\n        ]),\n ]);","import gql from \"graphql-tag\";\n\nexport const remove_doc_ref = gql`\n  query remove_doc_ref($doc_id: String!){\n    remove_doc_ref(doc_id: $doc_id ) {\n        message\n        success\n    }\n  }`;\n\n  export const getallrefdoc = gql`\n  query getallrefdoc($pagenumber:Int!, $course_id:String!){\n    getallrefdoc(pagenumber:$pagenumber,course_id:$course_id) {\n      data{\n      module_id\n      topic_id\n      _id\n      type\n      type_name\n      files{\n        path\n        doc_type\n      }\n      doc_type\n      created_on\n    }\n    success\n    count\n    message\n        }\n    \n  }`;\n  export const get_module_topic = gql`\n  query remove_doc_ref{\n    remove_doc_ref {\n      data{\n        data{\n          modulename\n        }\n      }\n    }\n  }`;","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators'; // change rajesh ranjan\nimport { Apollo } from 'apollo-angular';\nimport { remove_doc_ref, getallrefdoc, get_module_topic } from './operations/wca_query';\nimport { HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-type': 'application/json' })\n  .append('Authorization', 'Bearer 104150f8e66cae68b40203e1dbba7b4529231970')\n};\n\n// const headers = new HttpHeaders()\n//       .set('Authorization', 'Bearer 104150f8e66cae68b40203e1dbba7b4529231970');\n// change rajesh ranjan\n@Injectable({\n  providedIn: 'root'\n})\nexport class WcaService {\n\n  url = 'http://localhost:9001/api/upload/uploadExcel';\n envWcaApi:any = environment.wcaapiurl;\n envApi:any = environment.apiUrl;\n envCourseApi:any =environment.createCourseApi\n  bSubject = new BehaviorSubject({});\n  bSubject1 = new BehaviorSubject({});\n  token: string;\n\n  constructor(private http: HttpClient,\n              private apollo: Apollo, ) { }\n\n\n  getcourseDetails(courseID) {\n    // var headers = new HttpHeaders()\n    //   .set(\"Authorization\", \"Bearer 104150f8e66cae68b40203e1dbba7b4529231970\");\n    return this.http.post(this.envCourseApi + 'viewcourse', courseID, httpOptions);\n  }\n\n  getPublishedCourse() {\n    return this.http.get(this.envWcaApi + 'api/courses/getpublishedcourse');\n  }\n  getCreatedCourse() {\n\n    return this.http.get(this.envWcaApi + 'api/courses/getcreatedcourse');\n  }\n  getDraftCourse() {\n    return this.http.get(this.envWcaApi + 'api/courses/getdraftcourse');\n  }\n\n  getAllTemplates() {\n    return this.http.get(this.envWcaApi + 'api/template/getalltemplates');\n  }\n\n  uploadImage(image) {\n    return this.http.post(this.envWcaApi + 'api/upload/uploadimagefile', image);\n  }\n\n  uploadScromCourse(file) {\n    return this.http.post(this.envWcaApi + 'api/upload/uploadscromfile', file);\n  }\n\n  createCourse(course) {\n    // httpOptions.headers.append('Authorization', 'Bearer ' + this.token);\n    // httpOptions.headers.append('Content-Type' , 'application/json');\n    // console.log(httpOptions)\n    return this.http.post(this.envCourseApi + 'coursecreation', course, httpOptions);\n  }\n\n  updateCourse(course) {\n    return this.http.post(this.envCourseApi + 'updatecourse', course, httpOptions);\n  }\n\n  getAllInstructors() {\n    return this.http.get(this.envWcaApi + 'api/lov/getinstructordetails');\n  }\n\n  getAllTakeawayDetails() { return this.http.get(this.envWcaApi + 'api/lov/gettakewaydetails'); }\n\n  getAllPrerequisitDetails() { return this.http.get(this.envWcaApi + 'api/lov/getprerequisitdetails'); }\n\n  getAllCertifyDetails() { return this.http.get(this.envWcaApi + 'api/lov/getcertificationdetails'); }\n\n  createTemplate(arraydata) { return this.http.post(this.envWcaApi + 'api/template/savetemplate', arraydata); }\n\n  refDocUpload(fromdata) { return this.http.post(this.envApi + 'wca/refdocupload', fromdata); }\n  \n  editrefdocupload(data) { return this.http.post(this.envApi + 'wca/editrefdocupload', data); }\n  uploadAssignments(fromdata) { return this.http.post(this.envApi + 'wca/learnerscorefile', fromdata); }\n\n  remove_doc_ref(id) {\n    return this.apollo.query({\n      query: remove_doc_ref,\n      variables: {\n        doc_id: id\n\n      }\n    });\n  }\n  getallrefdoc(pagenumber, courseId) {\n    return this.apollo.query({\n      query: getallrefdoc,\n      variables: {\n        pagenumber,\n        course_id: courseId\n      }\n    });\n  }\n  getsingleTemplate(template) { return this.http.get(this.envWcaApi + 'api/template/getalltemplates?template_id=' + template); }\n\n  createDraft(draft) { return this.http.post(this.envWcaApi + 'api/courses/createscrom', draft); }\n\n  saveCourse(data) { return this.http.post(this.envWcaApi + 'api/courses/createcourse', data); }\n\n\n  getCourseDetails(id) { return this.http.get(this.envWcaApi + 'api/courses/getscrommodules?courseid=' + id); }\n\n  excelUpload(excel) { return this.http.post(this.envApi + 'wca/uploaddocument', excel); }\n\n  excelPpt(ppt) { return this.http.post(this.envWcaApi + 'api/template/pdftoimage', ppt); }\n\n  uploadKnowledgeCheck(fileData) { return this.http.post(this.envWcaApi + 'api/upload/uploadexcelfile', fileData); }\n\n  getPreviewData(path) { return this.http.post(this.envWcaApi + 'api/module/getquestions', { file: path }); }\n  repositoryModules() {\n    return this.http.get(this.envWcaApi + 'api/module/viewrepomodules', {});\n  }\n\n  postRepoModules(data) {\n    return this.http.post(this.envWcaApi + 'api/module/savemodules', data);\n  }\n\n  updatecoursetomudules(data) {\n    return this.http.post(this.envWcaApi + 'api/module/updatecoursetomudules', data);\n  }\n\n  deactivateModule(data) {\n    return this.http.post(this.envWcaApi + 'api/module/updaterepomodulestatus', data);\n  }\n\n  handleKeydown(event) {\n    // tslint:disable-next-line: deprecation\n    if (event.keyCode === 32) {\n      // do not propagate spaces to MatSelect, as this would select the currently active option\n      event.stopPropagation();\n    }\n    if (event.which === 32 && event.target.selectionStart === 0) {\n      return false;\n    }\n  }\n  get_module_topic() {\n    return this.apollo.query({\n      query: get_module_topic\n    });\n  }\n\n  checkCourseName_Availability(courseName): Observable<any> { // Check Course Name Avalailability\n    return this.http.get(this.envCourseApi + 'checkcoursename?course_name=' + courseName, httpOptions)\n    .pipe(tap());\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://facade.southindia.cloudapp.azure.com:3000/',\n  scormUrl: 'http://scorm.southindia.cloudapp.azure.com:8089/',\n  apiUrlImg: 'http://facade.southindia.cloudapp.azure.com:3000/',\n  createCourseApi: 'http://course.southindia.cloudapp.azure.com:3002/',\n  wcaapiurl: 'http://wca.southindia.cloudapp.azure.com:9001/',\n  domain : 'LXP',\n  analytics: 'UA-171656647-1',\n  systemIp : 'http://api.ipify.org/?format=json',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}